{"version":3,"sources":["components/Address.jsx","helpers/Transactor.js","helpers/Web3ModalSetup.js","helpers/ipfs.js","helpers/rpc.js","components/Balance.jsx","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/WalletImport.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/utils.jsx","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Events.jsx","components/Faucet.jsx","components/GasGauge.jsx","components/Header.jsx","components/Ramp.jsx","hooks/useStaticJsonRPC.js","helpers/loadAppContracts.js","components/Swap.jsx","components/ThemeSwitch.jsx","components/Timeline.jsx","components/NetworkDisplay.jsx","components/FaucetHint.jsx","views/Home.jsx","views/ExampleUI.jsx","views/Hints.jsx","views/Subgraph.jsx","App.jsx","hooks/GasPrice.js","index.jsx","constants.js","contracts/external_contracts.js"],"names":["Text","Typography","Address","props","currentTheme","useThemeSwitcher","address","value","ens","useLookupAddress","ensProvider","ensSplit","split","validEnsCheck","length","etherscanLink","blockExplorerLink","blockExplorer","displayAddress","substr","size","minimized","_jsx","style","verticalAlign","children","color","target","href","rel","Blockies","seed","toLowerCase","scale","_jsxs","fontSize","paddingLeft","onChange","editable","copyable","text","Skeleton","avatar","paragraph","rows","ethers","require","callbacks","Transactor","providerOrSigner","gasPrice","etherscan","async","tx","callback","signer","network","provider","Signer","isSigner","getNetwork","_isProvider","getSigner","console","log","options","notify","dappId","BLOCKNATIVE_DAPPID","system","networkId","chainId","transactionHandler","txInformation","possibleFunction","transaction","hash","Notify","etherscanNetwork","name","etherscanTxUrl","result","Promise","utils","parseUnits","gasLimit","hexlify","sendTransaction","indexOf","emitter","on","onclick","window","open","notification","info","message","description","placement","txResult","listeningInterval","setInterval","currentTransactionReceipt","getTransactionReceipt","confirmations","clearInterval","wait","e","data","error","JSON","parse","stringify","body","obj","errorObj","walletLinkProvider","WalletLink","appName","makeWeb3Provider","ALCHEMY_KEY","web3ModalSetup","SafeAppWeb3Modal","cacheProvider","theme","providerOptions","walletconnect","package","WalletConnectProvider","bridge","infuraId","INFURA_ID","rpc","portis","display","logo","Portis","id","fortmatic","Fortmatic","key","connector","_options","enable","authereum","Authereum","create","host","port","protocol","getRPCPollTime","_provider$_network","_network","RPC_POLL_TIME","Balance","dollarMode","setDollarMode","useState","localProviderPollingTime","balance","useBalance","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","price","dollarMultiplier","padding","cursor","onClick","Blockie","isENS","arguments","undefined","endsWith","AddressInput","setValue","scan","setScan","currentValue","updateAddress","useCallback","newValue","possibleAddress","resolveName","zIndex","position","left","top","width","QrReader","delay","resolution","onError","onScan","possibleNewValue","lastIndexOf","Input","autoComplete","autoFocus","placeholder","prefix","isAddress","addonAfter","marginTop","Badge","count","CameraOutlined","QrcodeOutlined","EtherInput","mode","setMode","setDisplay","useEffect","usdValue","ethValue","WalletImport","_ref","setShowImport","importMnemonic","setImportMnemonic","importMnemonicIndex","setImportMnemonicIndex","password","setPassword","importPrivatekey","setImportPrivatekey","importAddress","setImportAddress","ethersSeed","mnemonicToSeed","ethersHDNode","HDNode","fromSeed","fullPath","ethersPrivateKey","derivePath","privateKey","calculatePK","officialEthersWallet","Wallet","calculateAddress","opacity","Password","disabled","height","float","Button","currentPrivateKey","localStorage","getItem","setItem","Date","now","trim","location","reload","marginRight","signerAddress","setSignerAddress","newAddress","getAddress","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","showImport","providerSend","Tooltip","title","WalletOutlined","rotate","showImportButton","receiveButton","privateKeyButton","QR","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","wallet","extraPkDisplayAdded","extraPkDisplay","push","backgroundStyle","pastpk","pastwallet","fullLink","el","document","createElement","appendChild","select","execCommand","removeChild","success","createRandom","_signingKey","inputStyle","Modal","visible","Spin","paddingRight","onOk","onCancel","footer","type","loading","parseEther","to","SendOutlined","Account","userSigner","localProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","isContract","accountButtonInfo","cachedProvider","action","marginLeft","shape","constants","tryToDisplay","thing","asText","toNumber","displayable","formatUnits","overflowWrap","constructor","mostReadable","v","includes","tryToDisplayAsText","map","replaceAll","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","Row","Col","span","textAlign","icon","Divider","BigNumber","getFunctionInputKey","input","inputIndex","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputs","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","margin","event","suffix","txValueInput","floatValue","from","toHexString","payable","handleForm","returned","buttonIcon","fn","stateMutability","defaultValue","bordered","args","baseType","err","overrides","noContractDisplay","className","borderRadius","fontWeight","role","Contract","customContract","account","show","contractConfig","contracts","useContractLoader","contract","contractIsDeployed","useContractExistsAtAddress","displayedContractFunctions","useMemo","Object","entries","interface","functions","filter","contractDisplay","contractFuncInfo","contractFunc","connect","Card","Events","contractName","eventName","startBlock","events","useEventListener","paddingBottom","List","dataSource","renderItem","item","Item","blockNumber","sender","purpose","Faucet","setAddress","faucetAddress","setFaucetAddress","blockie","_faucetAddress","listAccounts","getFaucetAddress","GasGauge","parseInt","Title","Header","link","subTitle","justifyContent","flexDirection","flex","alignItems","defaultProps","Ramp","modalUp","setModalUp","allFaucets","n","networks","faucet","DollarCircleOutlined","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","swapAsset","userAddress","createProvider","p","providers","StaticJsonRpcProvider","url","ready","useStaticJsonRPC","urlArray","setProvider","handleProviders","race","_p","Option","Select","Swap","ThemeSwitcher","isDarkMode","setIsDarkMode","switcher","themes","right","bottom","Switch","checked","isChecked","dark","light","NetworkDisplay","NETWORKCHECK","localChainId","selectedChainId","targetNetwork","USE_NETWORK_SELECTOR","networkDisplay","networkSelected","NETWORK","networkLocal","Alert","closable","ethereum","toString","chainName","nativeCurrency","rpcUrls","rpcUrl","blockExplorerUrls","switchTx","request","method","params","switchError","addError","FaucetHint","faucetClicked","setFaucetClicked","yourLocalBalance","faucetTx","useGasPrice","faucetHint","Home","readContracts","useContractReader","Link","ExampleUI","writeContracts","newPurpose","setNewPurpose","border","YourContract","setPurpose","update","status","gasUsed","gas","encodeFunctionData","SyncOutlined","spin","DatePicker","Slider","range","defaultChecked","Progress","percent","Hints","selectedToken","setSelectedToken","listOfTokens","useTokenList","showSearch","filterOption","option","optionFilterProp","token","symbol","highlight","Subgraph","EXAMPLE_GRAPHQL","EXAMPLE_GQL","gql","useQuery","pollInterval","purposeColumns","dataIndex","render","record","d","toISOString","deployWarning","_Fragment","Table","purposes","columns","rowKey","GraphiQL","fetcher","graphQLParams","fetch","subgraphUri","headers","then","response","json","docExplorerOpen","query","initialNetwork","NETWORKS","localhost","USE_BURNER_WALLET","Web3ModalSetup","App","networkOptions","injectedProvider","setInjectedProvider","selectedNetwork","setSelectedNetwork","useLocation","process","REACT_APP_PROVIDER","mainnetProviderPollingTime","clearCachedProvider","disconnect","setTimeout","useExchangeEthPrice","speed","setGasPrice","usePoller","hasOwnProperty","axios","get","ETHERSCAN_KEY","newGasPrice","catch","useUserProviderAndSigner","yourMainnetBalance","deployedContracts","externalContracts","mainnetContracts","myMainnetDAIBalance","requestProvider","Web3Provider","code","reason","isSafeApp","checkSafeApp","faucetAvailable","connection","useBurner","lte","Menu","selectedKeys","pathname","Route","exact","path","DAI","ThemeSwitch","align","gutter","prevTheme","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","ApolloProvider","ThemeSwitcherProvider","themeMap","defaultTheme","BrowserRouter","getElementById","_process$env$REACT_AP","REACT_APP_INFURA_KEY","_process$env$REACT_AP2","REACT_APP_ALCHEMY_KEY","_process$env$REACT_AP3","REACT_APP_ETHERSCAN_API_KEY","_process$env$REACT_AP4","REACT_APP_BLOCKNATIVE_DAPP_ID","_process$env$REACT_AP5","REACT_APP_HARDHAT_HOST","REACT_APP_CODESPACES","hostname","replace","global","mainnet","goerli","sepolia","gnosis","zksyncalpha","chiado","polygon","mumbai","localOptimismL1","localOptimism","goerliOptimism","optimism","goerliArbitrum","arbitrum","devnetArbitrum","localAvalanche","fujiAvalanche","mainnetAvalanche","testnetHarmony","mainnetHarmony","fantom","testnetFantom","moonbeam","moonriver","moonbaseAlpha","moonbeamDevNode","module","exports","abi","internalType","anonymous","indexed","constant","outputs","UNI"],"mappings":"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","file":"static/js/main.6b80a85c.chunk.js","sourcesContent":["import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Blockies from \"react-blockies\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\n\n// changed value={address} to address={address}\n\nconst { Text } = Typography;\n\n/** \n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n**/\n\nconst blockExplorerLink = (address, blockExplorer) => `${blockExplorer || \"https://etherscan.io/\"}address/${address}`;\n\nexport default function Address(props) {\n  const { currentTheme } = useThemeSwitcher();\n  const address = props.value || props.address;\n  const ens = useLookupAddress(props.ensProvider, address);\n  const ensSplit = ens && ens.split(\".\");\n  const validEnsCheck = ensSplit && ensSplit[ensSplit.length - 1] === \"eth\";\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  let displayAddress = address?.substr(0, 5) + \"...\" + address?.substr(-4);\n\n  if (validEnsCheck) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {props.onChange ? (\n          <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n            <a\n              style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n              target=\"_blank\"\n              href={etherscanLink}\n              rel=\"noopener noreferrer\"\n            >\n              {displayAddress}\n            </a>\n          </Text>\n        ) : (\n          <Text copyable={{ text: address }}>\n            <a\n              style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n              target=\"_blank\"\n              href={etherscanLink}\n              rel=\"noopener noreferrer\"\n            >\n              {displayAddress}\n            </a>\n          </Text>\n        )}\n      </span>\n    </span>\n  );\n}\n","import { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nconst { ethers } = require(\"ethers\");\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\nconst callbacks = {};\n\nconst DEBUG = true;\n\nexport default function Transactor(providerOrSigner, gasPrice, etherscan) {\n  if (typeof providerOrSigner !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx, callback) => {\n      let signer;\n      let network;\n      let provider;\n      if (ethers.Signer.isSigner(providerOrSigner) === true) {\n        provider = providerOrSigner.provider;\n        signer = providerOrSigner;\n        network = providerOrSigner.provider && (await providerOrSigner.provider.getNetwork());\n      } else if (providerOrSigner._isProvider) {\n        provider = providerOrSigner;\n        signer = providerOrSigner.getSigner();\n        network = await providerOrSigner.getNetwork();\n      }\n\n      console.log(\"network\", network);\n      var options = null;\n      var notify = null;\n      options = {\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n        system: \"ethereum\",\n        networkId: network.chainId,\n        // darkMode: Boolean, // (default: false)\n        transactionHandler: txInformation => {\n          if (DEBUG) console.log(\"HANDLE TX\", txInformation);\n          const possibleFunction = callbacks[txInformation.transaction.hash];\n          if (typeof possibleFunction === \"function\") {\n            possibleFunction(txInformation.transaction);\n          }\n        },\n      };\n\n      notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          if (DEBUG) console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || ethers.utils.parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = ethers.utils.hexlify(120000);\n          }\n          if (DEBUG) console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        if (DEBUG) console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        if (callback) {\n          callbacks[result.hash] = callback;\n        }\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if (notify && [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n          // on most networks BlockNative will update a transaction handler,\n          // but locally we will set an interval to listen...\n          if (callback) {\n            const txResult = await tx;\n            const listeningInterval = setInterval(async () => {\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\n                callback({ ...txResult, ...currentTransactionReceipt });\n                clearInterval(listeningInterval);\n              }\n            }, 500);\n          }\n        }\n\n        if (typeof result.wait === \"function\") {\n          await result.wait();\n        }\n\n        return result;\n      } catch (e) {\n        if (DEBUG) console.log(e);\n        // Accounts for Metamask and default signer on all networks\n        let message =\n          e.data && e.data.message\n            ? e.data.message\n            : e.error && JSON.parse(JSON.stringify(e.error)).body\n            ? JSON.parse(JSON.parse(JSON.stringify(e.error)).body).error.message\n            : e.data\n            ? e.data\n            : JSON.stringify(e);\n        if (!e.error && e.message) {\n          message = e.message;\n        }\n\n        console.log(\"Attempt to clean up:\", message);\n        try {\n          let obj = JSON.parse(message);\n          if (obj && obj.body) {\n            let errorObj = JSON.parse(obj.body);\n            if (errorObj && errorObj.error && errorObj.error.message) {\n              message = errorObj.error.message;\n            }\n          }\n        } catch (e) {\n          //ignore\n        }\n\n        notification.error({\n          message: \"Transaction Error\",\n          description: message,\n        });\n        if (callback && typeof callback === \"function\") {\n          callback(e);\n        }\n      }\n    };\n  }\n}\n","import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Authereum from \"authereum\";\nimport Fortmatic from \"fortmatic\";\nimport WalletLink from \"walletlink\";\nimport { ALCHEMY_KEY, INFURA_ID } from \"../constants\";\nimport { SafeAppWeb3Modal } from \"@gnosis.pm/safe-apps-web3modal\";\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/**\n  Web3 modal helps us \"connect\" external wallets:\n**/\nconst web3ModalSetup = () =>\n  new SafeAppWeb3Modal({\n    network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n    cacheProvider: true, // optional\n    theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n    providerOptions: {\n      walletconnect: {\n        package: WalletConnectProvider, // required\n        options: {\n          bridge: \"https://polygon.bridge.walletconnect.org\",\n          infuraId: INFURA_ID,\n          rpc: {\n            10: \"https://mainnet.optimism.io\", // xDai\n            100: \"https://rpc.gnosischain.com\", // xDai\n            137: \"https://polygon-rpc.com\",\n            31337: \"http://localhost:8545\",\n            42161: \"https://arb1.arbitrum.io/rpc\",\n            80001: \"https://rpc-mumbai.maticvigil.com\",\n            71401: \"https://godwoken-testnet-v1.ckbapp.dev\",\n          },\n        },\n      },\n      portis: {\n        display: {\n          logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n          name: \"Portis\",\n          description: \"Connect to Portis App\",\n        },\n        package: Portis,\n        options: {\n          id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n        },\n      },\n      fortmatic: {\n        package: Fortmatic, // required\n        options: {\n          key: \"pk_live_5A7C91B2FC585A17\", // required\n        },\n      },\n      // torus: {\n      //   package: Torus,\n      //   options: {\n      //     networkParams: {\n      //       host: \"https://localhost:8545\", // optional\n      //       chainId: 1337, // optional\n      //       networkId: 1337 // optional\n      //     },\n      //     config: {\n      //       buildEnv: \"development\" // optional\n      //     },\n      //   },\n      // },\n      \"custom-walletlink\": {\n        display: {\n          logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n          name: \"Coinbase\",\n          description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n        },\n        package: walletLinkProvider,\n        connector: async (provider, _options) => {\n          await provider.enable();\n          return provider;\n        },\n      },\n      authereum: {\n        package: Authereum, // required\n      },\n    },\n  });\n\nexport default web3ModalSetup;\n","import { create } from \"ipfs-http-client\";\nimport { BufferList } from \"bl\";\nexport const ipfs = create({ host: \"ipfs.infura.io\", port: \"5001\", protocol: \"https\" });\n\nexport async function addToIPFS(file) {\n  const fileAdded = await ipfs.add(file);\n\n  return fileAdded;\n}\n\nexport function urlFromCID(cid) {\n  return `https://ipfs.infura.io/ipfs/${cid}`;\n}\n\nexport async function getFromIPFS(hashToGet) {\n  for await (const file of ipfs.cat(hashToGet)) {\n    const content = new BufferList(file).toString();\n\n    return content;\n  }\n}\n","import { RPC_POLL_TIME } from \"../constants\";\n\n// Get the appropriate polling time for a given provider.\nexport const getRPCPollTime = provider => {\n  // No polling interval on local hardhat chain.\n  if (provider?._network?.chainId === 31337) {\n    return 0;\n  } else {\n    return RPC_POLL_TIME;\n  }\n};\n","import React, { useState } from \"react\";\nimport { useBalance } from \"eth-hooks\";\nimport { getRPCPollTime } from \"../helpers\";\n\nconst { utils } = require(\"ethers\");\n\n/**\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n**/\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  let localProviderPollingTime = getRPCPollTime(props.provider);\n\n  const balance = useBalance(props.provider, props.address, localProviderPollingTime);\n  let floatBalance = parseFloat(\"0.00\");\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") usingBalance = props.balance;\n  if (typeof props.value !== \"undefined\") usingBalance = props.value;\n\n  if (usingBalance) {\n    const etherBalance = utils.formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier || 1;\n\n  if (dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import { Badge, Input } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\nimport QrReader from \"react-qr-reader\";\n\nimport Blockie from \"./Blockie\";\n\nconst isENS = (address = \"\") => address.endsWith(\".eth\") || address.endsWith(\".xyz\");\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/** \n  ~ What it does? ~\n\n  Displays an address input with QR scan option\n\n  ~ How can I use? ~\n\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n**/\nexport default function AddressInput(props) {\n  const { ensProvider, onChange } = props;\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (isENS(address)) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  return (\n    <div>\n      {scan ? (\n        <div\n          style={{\n            zIndex: 256,\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n          }}\n          onClick={() => {\n            setScan(false);\n          }}\n        >\n          <QrReader\n            delay={250}\n            resolution={1200}\n            onError={e => {\n              console.log(\"SCAN ERROR\", e);\n              setScan(false);\n            }}\n            onScan={newValue => {\n              if (newValue) {\n                console.log(\"SCAN VALUE\", newValue);\n                let possibleNewValue = newValue;\n                if (possibleNewValue.indexOf(\"/\") >= 0) {\n                  possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n                  console.log(\"CLEANED VALUE\", possibleNewValue);\n                }\n                setScan(false);\n                updateAddress(possibleNewValue);\n              }\n            }}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n      <Input\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ethers.utils.isAddress(currentValue) && !isENS(currentValue) && isENS(ens) ? ens : currentValue}\n        addonAfter={\n          <div\n            style={{ marginTop: 4, cursor: \"pointer\" }}\n            onClick={() => {\n              setScan(!scan);\n            }}\n          >\n            <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n              <QrcodeOutlined style={{ fontSize: 18 }} />\n            </Badge>{\" \"}\n            Scan\n          </div>\n        }\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\n// small change in useEffect, display currentValue if it's provided by user\n\n/**\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n**/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={mode === \"USD\" ? \"$\" : \"Ξ\"}\n      value={display}\n      addonAfter={\n        !props.price ? (\n          \"\"\n        ) : (\n          <div\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              if (mode === \"USD\") {\n                setMode(\"ETH\");\n                setDisplay(currentValue);\n              } else {\n                setMode(\"USD\");\n                if (currentValue) {\n                  const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n                  setDisplay(usdValue);\n                } else {\n                  setDisplay(currentValue);\n                }\n              }\n            }}\n          >\n            {mode === \"USD\" ? \"USD 🔀\" : \"ETH 🔀\"}\n          </div>\n        )\n      }\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const possibleNewValue = parseFloat(newValue);\n          if (possibleNewValue) {\n            const ethValue = possibleNewValue / props.price;\n            setValue(ethValue);\n            if (typeof props.onChange === \"function\") {\n              props.onChange(ethValue);\n            }\n            setDisplay(newValue);\n          } else {\n            setDisplay(newValue);\n          }\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Button, Input } from \"antd\";\nimport Address from \"./Address\";\n\nexport default function WalletImport({ setShowImport }) {\n  const [importMnemonic, setImportMnemonic] = useState();\n  const [importMnemonicIndex, setImportMnemonicIndex] = useState(\"0\");\n  const [password, setPassword] = useState(\"\");\n  const [importPrivatekey, setImportPrivatekey] = useState();\n  const [importAddress, setImportAddress] = useState();\n\n  useEffect(() => {\n    const calculatePK = async () => {\n      if (importMnemonic) {\n        const ethersSeed = ethers.utils.mnemonicToSeed(importMnemonic, password);\n        const ethersHDNode = ethers.utils.HDNode.fromSeed(ethersSeed);\n\n        const wallet_hdpath = \"m/44'/60'/0'/0/\";\n        const fullPath = wallet_hdpath + importMnemonicIndex;\n\n        const ethersDerivedHDNode = ethersHDNode.derivePath(fullPath);\n        const ethersPrivateKey = ethersDerivedHDNode.privateKey;\n\n        setImportPrivatekey(ethersPrivateKey);\n      } else {\n        setImportPrivatekey();\n      }\n    };\n    calculatePK();\n  }, [importMnemonic, importMnemonicIndex, password]);\n\n  useEffect(() => {\n    const calculateAddress = async () => {\n      if (importPrivatekey) {\n        try {\n          const officialEthersWallet = new ethers.Wallet(importPrivatekey);\n          console.log(officialEthersWallet);\n          setImportAddress(officialEthersWallet.address);\n        } catch (e) {\n          console.log(e);\n          setImportAddress(\"\");\n        }\n      }\n    };\n    calculateAddress();\n  }, [importPrivatekey]);\n\n  return (\n    <div>\n      <div style={{ marginTop: 21, width: 420 }}>\n        <h2>IMPORT</h2>\n      </div>\n\n      <div style={{ opacity: 0.5 }}>mnemonic</div>\n      <Input.Password\n        style={{ width: 380 }}\n        size=\"large\"\n        placeholder=\"word1 word2 word3\"\n        onChange={async e => {\n          setImportMnemonic(e.target.value);\n        }}\n      />\n\n      <Input\n        style={{ width: 69 }}\n        value={importMnemonicIndex}\n        onChange={e => {\n          setImportMnemonicIndex(e.target.value);\n        }}\n        size=\"large\"\n      />\n\n      <Input.Password\n        style={{ width: 380 }}\n        size=\"large\"\n        placeholder=\"optional password\"\n        onChange={async e => {\n          setPassword(e.target.value);\n        }}\n      />\n\n      <div style={{ marginTop: 21, width: 420 }}>\n        <h4>OR</h4>\n      </div>\n\n      <div style={{ opacity: 0.5 }}>private key</div>\n      <Input.Password\n        disabled={importMnemonic}\n        style={{ width: 420 }}\n        size=\"large\"\n        value={importPrivatekey}\n        placeholder=\"0x...\"\n        onChange={e => {\n          setImportPrivatekey(e.target.value);\n        }}\n      />\n\n      <hr />\n\n      {importAddress ? (\n        <div style={{ width: 420, height: 200 }}>\n          <div style={{ float: \"right\", marginTop: 64 }}>\n            <Address value={importAddress} />\n          </div>\n          <hr />\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <div style={{ float: \"right\" }}>\n        <Button\n          style={{ marginTop: 16 }}\n          disabled={!importPrivatekey || (importMnemonic && importMnemonic.length < 7)} //safety third!\n          onClick={() => {\n            const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n            if (currentPrivateKey) {\n              window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n            }\n\n            try {\n              const officialEthersWallet = new ethers.Wallet(importPrivatekey.trim());\n              console.log(officialEthersWallet);\n              setImportAddress(officialEthersWallet.address);\n              window.localStorage.setItem(\"metaPrivateKey\", importPrivatekey);\n              window.location.reload();\n              //setShowImport(!showImport)\n            } catch (e) {\n              console.log(e);\n            }\n          }}\n        >\n          <span style={{ marginRight: 8 }}>💾</span>Save\n        </Button>\n      </div>\n\n      <Button\n        style={{ marginTop: 16 }}\n        onClick={() => {\n          setShowImport(false);\n        }}\n      >\n        <span style={{ marginRight: 8 }}>⏪</span>Cancel\n      </Button>\n    </div>\n  );\n}\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, message, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\nimport WalletImport from \"./WalletImport\";\n\nconst { Text } = Typography;\n\n/**\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n**/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const [showImport, setShowImport] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: props.padding ? props.padding : 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: props.size ? props.size : 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  const showImportButton = (\n    <Button\n      style={{ marginTop: 16 }}\n      onClick={() => {\n        setShowImport(true);\n      }}\n    >\n      <span style={{ marginRight: 8 }}>💾</span>Import\n    </Button>\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      const fullLink = \"https://punkwallet.io/pk#\" + pk;\n\n      display = (\n        <div>\n          <div>\n            <b>Private Key:</b>\n            <div>\n              <Text style={{ fontSize: 11 }} copyable>\n                {pk}\n              </Text>\n            </div>\n\n            <div style={{ marginTop: 16 }}>\n              <div>\n                <b>Punk Wallet:</b>\n              </div>\n              <Text style={{ fontSize: 11 }} copyable>\n                {fullLink}\n              </Text>\n            </div>\n\n            <br />\n            <i>\n              Point your camera phone at qr code to open in &nbsp;\n              <a target=\"_blank\" href={fullLink} rel=\"noopener noreferrer\">\n                Punk Wallet\n              </a>\n              :\n            </i>\n\n            <div\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                const el = document.createElement(\"textarea\");\n                el.value = fullLink;\n                document.body.appendChild(el);\n                el.select();\n                document.execCommand(\"copy\");\n                document.body.removeChild(el);\n                message.success(<span style={{ position: \"relative\" }}>Copied Private Key Link</span>);\n              }}\n            >\n              <QR value={fullLink} size=\"450\" level=\"H\" includeMargin renderAs=\"svg\" />\n            </div>\n          </div>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={\n          showImport\n            ? null\n            : [\n                showImportButton,\n                privateKeyButton,\n                receiveButton,\n                <Button\n                  key=\"submit\"\n                  type=\"primary\"\n                  disabled={!amount || !toAddress || qr}\n                  loading={false}\n                  onClick={() => {\n                    const tx = Transactor(props.signer || props.provider);\n\n                    let value;\n                    try {\n                      value = ethers.utils.parseEther(\"\" + amount);\n                    } catch (e) {\n                      // failed to parseEther, try something else\n                      value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n                    }\n\n                    tx({\n                      to: toAddress,\n                      value,\n                    });\n                    setOpen(!open);\n                    setQr();\n                  }}\n                >\n                  <SendOutlined /> Send\n                </Button>,\n              ]\n        }\n      >\n        {showImport ? <WalletImport setShowImport={setShowImport} /> : display}\n      </Modal>\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/** \n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n    isContract={boolean}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n**/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n  isContract,\n}) {\n  const { currentTheme } = useThemeSwitcher();\n\n  let accountButtonInfo;\n  if (web3Modal?.cachedProvider) {\n    accountButtonInfo = { name: \"Logout\", action: logoutOfWeb3Modal };\n  } else {\n    accountButtonInfo = { name: \"Connect\", action: loadWeb3Modal };\n  }\n\n  const display = !minimized && (\n    <span>\n      {address && (\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} fontSize={20} />\n      )}\n      <Balance address={address} provider={localProvider} price={price} size={20} />\n      {!isContract && (\n        <Wallet\n          address={address}\n          provider={localProvider}\n          signer={userSigner}\n          ensProvider={mainnetProvider}\n          price={price}\n          color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n          size={22}\n          padding={\"0px\"}\n        />\n      )}\n    </span>\n  );\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {display}\n      {web3Modal && (\n        <Button style={{ marginLeft: 8 }} shape=\"round\" onClick={accountButtonInfo.action}>\n          {accountButtonInfo.name}\n        </Button>\n      )}\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { utils, constants } = require(\"ethers\");\n\n/** \n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n**/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number,\n                   it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue);\n              setDisplay(changedValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          } else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          // const ethValue = parseFloat(newValue) / props.price;\n          // setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\n\nimport Address from \"../Address\";\n\nconst { utils } = require(\"ethers\");\n\nconst tryToDisplay = (thing, asText = false, blockExplorer) => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      const displayable = \"Ξ\" + utils.formatUnits(thing, \"ether\");\n      return asText ? displayable : <span style={{ overflowWrap: \"break-word\", width: \"100%\" }}>{displayable}</span>;\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return asText ? thing : <Address address={thing} fontSize={22} blockExplorer={blockExplorer} />;\n  }\n  if (thing && thing.constructor && thing.constructor.name === \"Array\") {\n    const mostReadable = v => ([\"number\", \"boolean\"].includes(typeof v) ? v : tryToDisplayAsText(v));\n    const displayable = JSON.stringify(thing.map(mostReadable));\n    return asText ? (\n      displayable\n    ) : (\n      <span style={{ overflowWrap: \"break-word\", width: \"100%\" }}>{displayable.replaceAll(\",\", \",\\n\")}</span>\n    );\n  }\n  return JSON.stringify(thing);\n};\n\nconst tryToDisplayAsText = thing => tryToDisplay(thing, true);\n\nexport { tryToDisplay, tryToDisplayAsText };\n","import { Button, Col, Divider, Row } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { tryToDisplay } from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh, blockExplorer }) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable, false, blockExplorer)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <Button type=\"link\" onClick={refresh} icon=\"🔄\" />\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","import { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\n\nimport { Transactor } from \"../../helpers\";\nimport { tryToDisplay, tryToDisplayAsText } from \"./utils\";\n\nconst { utils, BigNumber } = require(\"ethers\");\n\nconst getFunctionInputKey = (functionInfo, input, inputIndex) => {\n  const name = input?.name ? input.name : \"input_\" + inputIndex + \"_\";\n  return functionInfo.name + \"_\" + name + \"_\" + input.type;\n};\n\nconst isReadable = fn => fn.stateMutability === \"view\" || fn.stateMutability === \"pure\";\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  const inputs = functionInfo.inputs.map((input, inputIndex) => {\n    const key = getFunctionInputKey(functionInfo, input, inputIndex);\n\n    let buttons = \"\";\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to bytes32\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key]);\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"address\") {\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\n      if (possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        );\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={event => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    );\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      const floatValue = parseFloat(txValue);\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                  </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const handleForm = returned => {\n    if (returned) {\n      setForm({});\n    }\n  };\n\n  const buttonIcon = isReadable(functionInfo) ? (\n    <Button style={{ marginLeft: -32 }}>Read📡</Button>\n  ) : (\n    <Button style={{ marginLeft: -32 }}>Send💸</Button>\n  );\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              const args = functionInfo.inputs.map((input, inputIndex) => {\n                const key = getFunctionInputKey(functionInfo, input, inputIndex);\n                let value = form[key];\n                if ([\"array\", \"tuple\"].includes(input.baseType)) {\n                  value = JSON.parse(value);\n                } else if (input.type === \"bool\") {\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\n                    value = 1;\n                  } else {\n                    value = 0;\n                  }\n                }\n                return value;\n              });\n\n              let result;\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\n                try {\n                  const returned = await contractFunction(...args);\n                  handleForm(returned);\n                  result = tryToDisplayAsText(returned);\n                } catch (err) {\n                  console.error(err);\n                }\n              } else {\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                if (gasPrice) {\n                  overrides.gasPrice = gasPrice;\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                handleForm(returned);\n                result = tryToDisplay(returned);\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import { Card } from \"antd\";\nimport { useContractExistsAtAddress, useContractLoader } from \"eth-hooks\";\nimport React, { useMemo, useState } from \"react\";\nimport Address from \"../Address\";\nimport Balance from \"../Balance\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\n\nconst noContractDisplay = (\n  <div>\n    Loading...{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run chain\n      </span>{\" \"}\n      and{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      <i>again</i> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({\n  customContract,\n  account,\n  gasPrice,\n  signer,\n  provider,\n  name,\n  show,\n  price,\n  blockExplorer,\n  chainId,\n  contractConfig,\n}) {\n  const contracts = useContractLoader(provider, contractConfig, chainId);\n  let contract;\n  if (!customContract) {\n    contract = contracts ? contracts[name] : \"\";\n  } else {\n    contract = customContract;\n  }\n\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n\n  const displayedContractFunctions = useMemo(() => {\n    const results = contract\n      ? Object.entries(contract.interface.functions).filter(\n          fn => fn[1][\"type\"] === \"function\" && !(show && show.indexOf(fn[1][\"name\"]) < 0),\n        )\n      : [];\n    return results;\n  }, [contract, show]);\n\n  const [refreshRequired, triggerRefresh] = useState(false);\n  const contractDisplay = displayedContractFunctions.map(contractFuncInfo => {\n    const contractFunc =\n      contractFuncInfo[1].stateMutability === \"view\" || contractFuncInfo[1].stateMutability === \"pure\"\n        ? contract[contractFuncInfo[0]]\n        : contract.connect(signer)[contractFuncInfo[0]];\n\n    if (typeof contractFunc === \"function\") {\n      if (isQueryable(contractFuncInfo[1])) {\n        // If there are no inputs, just display return value\n        return (\n          <DisplayVariable\n            key={contractFuncInfo[1].name}\n            contractFunction={contractFunc}\n            functionInfo={contractFuncInfo[1]}\n            refreshRequired={refreshRequired}\n            triggerRefresh={triggerRefresh}\n            blockExplorer={blockExplorer}\n          />\n        );\n      }\n\n      // If there are inputs, display a form to allow users to provide these\n      return (\n        <FunctionForm\n          key={\"FF\" + contractFuncInfo[0]}\n          contractFunction={contractFunc}\n          functionInfo={contractFuncInfo[1]}\n          provider={provider}\n          gasPrice={gasPrice}\n          triggerRefresh={triggerRefresh}\n        />\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div style={{ fontSize: 24 }}>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Address value={address} blockExplorer={blockExplorer} />\n              <Balance address={address} provider={provider} price={price} />\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay && contractDisplay.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import { List } from \"antd\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Address from \"./Address\";\n\n/**\n  ~ What it does? ~\n\n  Displays a lists of events\n\n  ~ How can I use? ~\n\n  <Events\n    contracts={readContracts}\n    contractName=\"YourContract\"\n    eventName=\"SetPurpose\"\n    localProvider={localProvider}\n    mainnetProvider={mainnetProvider}\n    startBlock={1}\n  />\n**/\n\nexport default function Events({ contracts, contractName, eventName, localProvider, mainnetProvider, startBlock }) {\n  // 📟 Listen for broadcast events\n  const events = useEventListener(contracts, contractName, eventName, localProvider, startBlock);\n\n  return (\n    <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n      <h2>Events:</h2>\n      <List\n        bordered\n        dataSource={events}\n        renderItem={item => {\n          return (\n            <List.Item key={item.blockNumber + \"_\" + item.args.sender + \"_\" + item.args.purpose}>\n              <Address address={item.args[0]} ensProvider={mainnetProvider} fontSize={16} />\n              {item.args[1]}\n            </List.Item>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import { Button, Input, Tooltip } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { Transactor } from \"../helpers\";\nimport Wallet from \"./Wallet\";\n\nconst { utils } = require(\"ethers\");\n\n// improved a bit by converting address to ens if it exists\n// added option to directly input ens name\n// added placeholder option\n\n/**\n  ~ What it does? ~\n\n  Displays a local faucet to send ETH to given address, also wallet is provided\n\n  ~ How can I use? ~\n\n  <Faucet\n    price={price}\n    localProvider={localProvider}\n    ensProvider={mainnetProvider}\n    placeholder={\"Send local faucet\"}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\n  - Provide localProvider={localProvider} to be able to send ETH to given address\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n              works both in input field & wallet\n  - Provide placeholder=\"Send local faucet\" value for the input\n**/\n\nexport default function Faucet(props) {\n  const [address, setAddress] = useState();\n  const [faucetAddress, setFaucetAddress] = useState();\n\n  const { price, placeholder, localProvider, ensProvider } = props;\n\n  useEffect(() => {\n    const getFaucetAddress = async () => {\n      if (localProvider) {\n        const _faucetAddress = await localProvider.listAccounts();\n        setFaucetAddress(_faucetAddress[0]);\n      }\n    };\n    getFaucetAddress();\n  }, [localProvider]);\n\n  let blockie;\n  if (address && typeof address.toLowerCase === \"function\") {\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\n  } else {\n    blockie = <div />;\n  }\n\n  const updateAddress = newValue => {\n    if (typeof newValue !== \"undefined\" && utils.isAddress(newValue)) {\n      setAddress(newValue);\n    }\n  };\n\n  const tx = Transactor(localProvider);\n\n  return (\n    <span>\n      <Input\n        size=\"large\"\n        placeholder={placeholder ? placeholder : \"local faucet\"}\n        prefix={blockie}\n        value={address}\n        onChange={e => updateAddress(e.target.value)}\n        suffix={\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\n            <Button\n              onClick={() => {\n                tx({\n                  to: address,\n                  value: utils.parseEther(\"0.5\"),\n                });\n                setAddress(\"\");\n              }}\n              shape=\"circle\"\n              icon={<SendOutlined />}\n            />\n            <Wallet\n              color=\"#888888\"\n              provider={localProvider}\n              ensProvider={ensProvider}\n              price={price}\n              address={faucetAddress}\n            />\n          </Tooltip>\n        }\n      />\n    </span>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"antd\";\n\n// added display of 0 instead of NaN if gas price is not provided\n\n/**\n  ~ What it does? ~\n\n  Displays gas gauge\n\n  ~ How can I use? ~\n\n  <GasGauge\n    gasPrice={gasPrice}\n  />\n\n  ~ Features ~\n\n  - Provide gasPrice={gasPrice} and get current gas gauge\n**/\n\nexport default function GasGauge(props) {\n  return (\n    <Button\n      onClick={() => {\n        window.open(\"https://ethgasstation.info/\");\n      }}\n      size=\"large\"\n      shape=\"round\"\n    >\n      <span style={{ marginRight: 8 }}>\n        <span role=\"img\" aria-label=\"fuelpump\">\n          ⛽️\n        </span>\n      </span>\n      {typeof props.gasPrice === \"undefined\" ? 0 : parseInt(props.gasPrice, 10) / 10 ** 9}g\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\nconst { Title, Text } = Typography;\n\n// displays a page header\n\nexport default function Header({ link, title, subTitle, ...props }) {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"1.2rem\" }}>\n      <div style={{ display: \"flex\", flexDirection: \"column\", flex: 1, alignItems: \"start\" }}>\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Title level={4} style={{ margin: \"0 0.5rem 0 0\" }}>\n            {title}\n          </Title>\n        </a>\n        <Text type=\"secondary\" style={{ textAlign: \"left\" }}>\n          {subTitle}\n        </Text>\n      </div>\n      {props.children}\n    </div>\n  );\n}\n\nHeader.defaultProps = {\n  link: \"https://github.com/scaffold-eth/scaffold-eth\",\n  title: \"🏗 Scaffold-Eth\",\n  subTitle: \"Forkable Ethereum dev stack focused on fast product iteration\",\n};\n","import { Button, Divider, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { DollarCircleOutlined } from \"@ant-design/icons\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\n\n// added display of 0 if price={price} is not provided\n\n/**\n  ~ What it does? ~\n\n  Displays current ETH price and gives options to buy ETH through Wyre/Ramp/Coinbase\n                            or get through Rinkeby/Ropsten/Kovan/Goerli\n\n  ~ How can I use? ~\n\n  <Ramp\n    price={price}\n    address={address}\n  />\n\n  ~ Features ~\n\n  - Ramp opens directly in the application, component uses RampInstantSDK\n  - Provide price={price} and current ETH price will be displayed\n  - Provide address={address} and your address will be pasted into Wyre/Ramp instantly\n**/\n\nexport default function Ramp(props) {\n  const [modalUp, setModalUp] = useState(\"down\");\n\n  const type = \"default\";\n\n  const allFaucets = [];\n  for (const n in props.networks) {\n    if (props.networks[n].chainId !== 31337 && props.networks[n].chainId !== 1) {\n      allFaucets.push(\n        <p key={props.networks[n].chainId}>\n          <Button\n            style={{ color: props.networks[n].color }}\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(props.networks[n].faucet);\n            }}\n          >\n            {props.networks[n].name}\n          </Button>\n        </p>,\n      );\n    }\n  }\n\n  return (\n    <div>\n      <Button\n        size=\"large\"\n        shape=\"round\"\n        onClick={() => {\n          setModalUp(\"up\");\n        }}\n      >\n        <DollarCircleOutlined style={{ color: \"#52c41a\" }} />{\" \"}\n        {typeof props.price === \"undefined\" ? 0 : props.price.toFixed(2)}\n      </Button>\n      <Modal\n        title=\"Buy ETH\"\n        visible={modalUp === \"up\"}\n        onCancel={() => {\n          setModalUp(\"down\");\n        }}\n        footer={[\n          <Button\n            key=\"back\"\n            onClick={() => {\n              setModalUp(\"down\");\n            }}\n          >\n            cancel\n          </Button>,\n        ]}\n      >\n        <p>\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(\"https://pay.sendwyre.com/purchase?destCurrency=ETH&sourceAmount=25&dest=\" + props.address);\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\">\n              <span role=\"img\" aria-label=\"flag-us\">\n                🇺🇸\n              </span>\n            </span>\n            Wyre\n          </Button>\n        </p>\n        <p>\n          {\" \"}\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              new RampInstantSDK({\n                hostAppName: \"scaffold-eth\",\n                hostLogoUrl: \"https://scaffoldeth.io/scaffold-eth.png\",\n                swapAmount: \"100000000000000000\", // 0.1 ETH in wei  ?\n                swapAsset: \"ETH\",\n                userAddress: props.address,\n              })\n                .on(\"*\", event => console.log(event))\n                .show();\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\">\n              <span role=\"img\" aria-label=\"flag-gb\">\n                🇬🇧\n              </span>\n            </span>\n            Ramp\n          </Button>\n        </p>\n\n        <p>\n          <Button\n            type={type}\n            size=\"large\"\n            shape=\"round\"\n            onClick={() => {\n              window.open(\"https://www.coinbase.com/buy-ethereum\");\n            }}\n          >\n            <span style={{ paddingRight: 15 }} role=\"img\" aria-label=\"bank\">\n              🏦\n            </span>\n            Coinbase\n          </Button>\n        </p>\n\n        <Divider />\n\n        <h2>Testnet ETH</h2>\n\n        {allFaucets}\n      </Modal>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst createProvider = async url => {\n  const p = new ethers.providers.StaticJsonRpcProvider(url);\n\n  await p.ready;\n\n  return p;\n};\n\nexport default function useStaticJsonRPC(urlArray, localProvider = null) {\n  const [provider, setProvider] = useState(null);\n\n  const handleProviders = useCallback(async () => {\n    try {\n      const p = await Promise.race(urlArray.map(createProvider));\n      const _p = await p;\n\n      setProvider(_p);\n    } catch (error) {\n      // todo: show notification error about provider issues\n      console.log(error);\n    }\n  }, [urlArray]);\n\n  useEffect(() => {\n    // Re-use the localProvider if it's mainnet (to use only one instance of it)\n    if (localProvider && localProvider?._network.chainId === 1) {\n      setProvider(localProvider);\n      return;\n    }\n\n    handleProviders();\n\n    // eslint-disable-next-line\n  }, [JSON.stringify(urlArray), localProvider]);\n\n  return provider;\n}\n","const contractListPromise = import(\"../contracts/hardhat_contracts.json\");\n// @ts-ignore\nconst externalContractsPromise = import(\"../contracts/external_contracts\");\n\nexport const loadAppContracts = async () => {\n  const config = {};\n  config.deployedContracts = (await contractListPromise).default ?? {};\n  config.externalContracts = (await externalContractsPromise).default ?? {};\n  return config;\n};\n","import {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\n\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  console.log(\"no call of that name!\");\n  return undefined;\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n  const [tokens, setTokens] = useState();\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenListResponse = await fetch(_tokenListUri);\n        const tokenListJson = await tokenListResponse.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI, _tokenListUri, activeChainId]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n    // eslint-disable-next-line\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades, exact]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(\n          ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals),\n        );\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n","import { Switch } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\n\nexport default function ThemeSwitcher() {\n  const theme = window.localStorage.getItem(\"theme\");\n  const [isDarkMode, setIsDarkMode] = useState(!(!theme || theme === \"light\"));\n  const { switcher, currentTheme, themes } = useThemeSwitcher();\n\n  useEffect(() => {\n    window.localStorage.setItem(\"theme\", currentTheme);\n  }, [currentTheme]);\n\n  const toggleTheme = isChecked => {\n    setIsDarkMode(isChecked);\n    switcher({ theme: isChecked ? themes.dark : themes.light });\n  };\n\n  return (\n    <div className=\"main fade-in\" style={{ position: \"fixed\", right: 8, bottom: 8 }}>\n      <span style={{ padding: 8 }}>{currentTheme === \"light\" ? \"☀️\" : \"🌜\"}</span>\n      <Switch checked={isDarkMode} onChange={toggleTheme} />\n    </div>\n  );\n}\n","import { Timeline, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import { Alert, Button } from \"antd\";\nimport React from \"react\";\n\nimport { NETWORK } from \"../constants\";\n\nfunction NetworkDisplay({\n  NETWORKCHECK,\n  localChainId,\n  selectedChainId,\n  targetNetwork,\n  USE_NETWORK_SELECTOR,\n  logoutOfWeb3Modal,\n}) {\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = USE_NETWORK_SELECTOR ? null : (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 150, top: 25, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  console.log({ networkDisplay });\n\n  return networkDisplay;\n}\n\nexport default NetworkDisplay;\n","import { Button } from \"antd\";\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useBalance, useGasPrice } from \"eth-hooks\";\n\nimport { getRPCPollTime, Transactor } from \"../helpers\";\n\nfunction FaucetHint({ localProvider, targetNetwork, address }) {\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  const localProviderPollingTime = getRPCPollTime(localProvider);\n\n  // fetch local balance\n  const yourLocalBalance = useBalance(localProvider, address, localProviderPollingTime);\n\n  // get gas Price from network\n  const gasPrice = useGasPrice(targetNetwork, \"fast\", localProviderPollingTime);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  let faucetHint = \"\";\n\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ position: \"absolute\", right: 65, top: 65 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n\n  return faucetHint;\n}\n\nexport default FaucetHint;\n","import { useContractReader } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * web3 props can be passed from '../App.jsx' into your local view component for use\n * @param {*} yourLocalBalance balance on current network\n * @param {*} readContracts contracts from current chain already pre-loaded using ethers contract module. More here https://docs.ethers.io/v5/api/contract/contract/\n * @returns react component\n **/\nfunction Home({ yourLocalBalance, readContracts }) {\n  // you can also use hooks locally in your component of choice\n  // in this case, let's keep track of 'purpose' variable from our contract\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📝</span>\n        This Is Your App Home. You can start editing it in{\" \"}\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/react-app/src/views/Home.jsx\n        </span>\n      </div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>✏️</span>\n        Edit your smart contract{\" \"}\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          YourContract.sol\n        </span>{\" \"}\n        in{\" \"}\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/contracts\n        </span>\n      </div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        Deploy your smart contract with{\" \"}\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn deploy\n        </span>{\" \"}\n      </div>\n      {!purpose ? (\n        <div style={{ margin: 32 }}>\n          <span style={{ marginRight: 8 }}>👷‍♀️</span>\n          You haven't deployed your contract yet, run\n          <span\n            className=\"highlight\"\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f9f9f9\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            yarn chain\n          </span>{\" \"}\n          and{\" \"}\n          <span\n            className=\"highlight\"\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f9f9f9\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            yarn deploy\n          </span>{\" \"}\n          to deploy your first contract!\n        </div>\n      ) : (\n        <div style={{ margin: 32 }}>\n          <span style={{ marginRight: 8 }}>🤓</span>\n          The \"purpose\" variable from your contract is{\" \"}\n          <span\n            className=\"highlight\"\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f9f9f9\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            {purpose}\n          </span>\n        </div>\n      )}\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🤖</span>\n        An example prop of your balance{\" \"}\n        <span style={{ fontWeight: \"bold\", color: \"green\" }}>({ethers.utils.formatEther(yourLocalBalance)})</span> was\n        passed into the\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          Home.jsx\n        </span>{\" \"}\n        component from\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          App.jsx\n        </span>\n      </div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>💭</span>\n        Check out the <Link to=\"/hints\">\"Hints\"</Link> tab for more tips.\n      </div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛠</span>\n        Tinker with your smart contract using the <Link to=\"/debug\">\"Debug Contract\"</Link> tab.\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import { Button, Card, DatePicker, Divider, Input, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\nimport { SyncOutlined } from \"@ant-design/icons\";\n\nimport { Address, Balance, Events } from \"../components\";\n\nexport default function ExampleUI({\n  purpose,\n  address,\n  mainnetProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <h2>Example UI:</h2>\n        <h4>purpose: {purpose}</h4>\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const result = tx(writeContracts.YourContract.setPurpose(newPurpose), update => {\n                console.log(\"📡 Transaction Update:\", update);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\n                  console.log(\n                    \" ⛽️ \" +\n                      update.gasUsed +\n                      \"/\" +\n                      (update.gasLimit || update.gas) +\n                      \" @ \" +\n                      parseFloat(update.gasPrice) / 1000000000 +\n                      \" gwei\",\n                  );\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n          >\n            Set Purpose!\n          </Button>\n        </div>\n        <Divider />\n        Your Address:\n        <Address address={address} ensProvider={mainnetProvider} fontSize={16} />\n        <Divider />\n        ENS Address Example:\n        <Address\n          address=\"0x34aA3F359A9D614239015126635CE7732c18fDF3\" /* this will show as austingriffith.eth */\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <div>OR</div>\n        <Balance address={address} provider={localProvider} price={price} />\n        <Divider />\n        <div>🐳 Example Whale Balance:</div>\n        <Balance balance={utils.parseEther(\"1000\")} provider={localProvider} price={price} />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <Divider />\n        Your Contract Address:\n        <Address\n          address={readContracts && readContracts.YourContract ? readContracts.YourContract.address : null}\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how you call setPurpose on your contract: */\n              tx(writeContracts.YourContract.setPurpose(\"🍻 Cheers\"));\n            }}\n          >\n            Set Purpose to &quot;🍻 Cheers&quot;\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Send Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how we call setPurpose AND send some value along */\n              tx(\n                writeContracts.YourContract.setPurpose(\"💵 Paying for this one!\", {\n                  value: utils.parseEther(\"0.001\"),\n                }),\n              );\n              /* this will fail until you make the setPurpose function payable */\n            }}\n          >\n            Set Purpose With Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* you can also just craft a transaction and send it to the tx() transactor */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n                data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\n                  \"🤓 Whoa so 1337!\",\n                ]),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Another Example\n          </Button>\n        </div>\n      </div>\n\n      {/*\n        📑 Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <Events\n        contracts={readContracts}\n        contractName=\"YourContract\"\n        eventName=\"SetPurpose\"\n        localProvider={localProvider}\n        mainnetProvider={mainnetProvider}\n        startBlock={1}\n      />\n\n      <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 256 }}>\n        <Card>\n          Check out all the{\" \"}\n          <a\n            href=\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            📦 components\n          </a>\n        </Card>\n\n        <Card style={{ marginTop: 32 }}>\n          <div>\n            There are tons of generic components included from{\" \"}\n            <a href=\"https://ant.design/components/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              🐜 ant.design\n            </a>{\" \"}\n            too!\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <Button type=\"primary\">Buttons</Button>\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <SyncOutlined spin /> Icons\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            Date Pickers?\n            <div style={{ marginTop: 2 }}>\n              <DatePicker onChange={() => {}} />\n            </div>\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Slider range defaultValue={[20, 50]} onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Switch defaultChecked onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Progress percent={50} status=\"active\" />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Spin />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import { Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\n\nimport { useTokenList } from \"eth-hooks/dapps/dex\";\nimport { Address, AddressInput } from \"../components\";\n\nconst { Option } = Select;\n\nexport default function Hints({ yourLocalBalance, mainnetProvider, price, address }) {\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  const listOfTokens = useTokenList(\n    \"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\",\n  );\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>👷</span>\n        Edit your <b>contract</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/contracts\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        <b>compile/deploy</b> with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚀</span>\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/react-app/src/contracts/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🎛</span>\n        Edit your <b>frontend</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/reactapp/src/App.js\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔭</span>\n        explore the\n        <span\n          className=\"highlight\"\n          style={{\n            marginLeft: 4,\n            marginRight: 4,\n            /* backgroundColor: \"#f9f9f9\", */\n            padding: 4,\n            borderRadius: 4,\n            fontWeight: \"bolder\",\n          }}\n        >\n          🖇 hooks\n        </span>\n        and\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          📦 components\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        for example, the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          useBalance()\n        </span>{\" \"}\n        hook keeps track of your balance: <b>{utils.formatEther(yourLocalBalance || 0)}</b>\n      </div>\n\n      <div style={{ margin: 8 }}>\n        <div>\n          <b>useTokenList()</b> can get you an array of tokens from{\" \"}\n          <a href=\"https://tokenlists.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            tokenlists.org!\n          </a>\n        </div>\n        <Select\n          showSearch\n          value={selectedToken}\n          onChange={value => {\n            console.log(`selected ${value}`);\n            setSelectedToken(value);\n          }}\n          filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          optionFilterProp=\"children\"\n        >\n          {listOfTokens.map(token => (\n            <Option key={token.address + \"_\" + token.symbol} value={token.symbol}>\n              {token.symbol}\n            </Option>\n          ))}\n        </Select>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        as you build your app you&apos;ll need web3 specific components like an\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          {\"<AddressInput/>\"}\n        </span>\n        component:\n        <div style={{ width: 350, padding: 16, margin: \"auto\" }}>\n          <AddressInput ensProvider={mainnetProvider} />\n        </div>\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        this balance could be multiplied by\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          price\n        </span>{\" \"}\n        that is loaded with the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          usePrice\n        </span>{\" \"}\n        hook with the current value: <b>${price}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💧</span>\n        use the <b>faucet</b> to send funds to\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <Address address={address} minimized /> {address}\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        deploy to a testnet or mainnet by editing\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/hardhat.config.js\n        </span>\n        and running\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔑</span>\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run generate\n        </span>\n        will create a deployer account in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat\n        </span>\n        <div style={{ marginTop: 8 }}>\n          (use{\" \"}\n          <span\n            className=\"highlight\"\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f1f1f1\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            yarn run account\n          </span>{\" \"}\n          to display deployer address and balance)\n        </div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>⚙️</span>\n        build your app with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run build\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        ship it!\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run surge\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run s3\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run ipfs\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💬</span>\n        for support, join this\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\n            Telegram Chat\n          </a>\n          &nbsp; or &nbsp;\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://discord.gg/pRsr6rwG\">\n            Discord\n          </a>\n        </span>\n      </div>\n      <div style={{ padding: 128 }}>\n        🛠 Check out your browser&apos;s developer console for more... (inspect console) 🚀\n      </div>\n    </div>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport { Button, Input, Table, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport GraphiQL from \"graphiql\";\nimport \"graphiql/graphiql.min.css\";\nimport fetch from \"isomorphic-fetch\";\nimport React, { useState } from \"react\";\nimport { Address } from \"../components\";\n\nconst highlight = {\n  marginLeft: 4,\n  marginRight: 8,\n  /* backgroundColor: \"#f9f9f9\", */ padding: 4,\n  borderRadius: 4,\n  fontWeight: \"bolder\",\n};\n\nfunction Subgraph(props) {\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `;\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\n  const { loading, data } = useQuery(EXAMPLE_GQL, { pollInterval: 2500 });\n\n  const purposeColumns = [\n    {\n      title: \"Purpose\",\n      dataIndex: \"purpose\",\n      key: \"purpose\",\n    },\n    {\n      title: \"Sender\",\n      key: \"id\",\n      render: record => <Address value={record.sender.id} ensProvider={props.mainnetProvider} fontSize={16} />,\n    },\n    {\n      title: \"createdAt\",\n      key: \"createdAt\",\n      dataIndex: \"createdAt\",\n      render: d => new Date(d * 1000).toISOString(),\n    },\n  ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  const deployWarning = (\n    <div style={{ marginTop: 8, padding: 8 }}>Warning: 🤔 Have you deployed your subgraph yet?</div>\n  );\n\n  return (\n    <>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        You will find that parsing/tracking events with the{\" \"}\n        <span className=\"highlight\" style={highlight}>\n          useEventListener\n        </span>{\" \"}\n        hook becomes a chore for every new project.\n      </div>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        Instead, you can use{\" \"}\n        <a href=\"https://thegraph.com/docs/about/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">\n          The Graph\n        </a>{\" \"}\n        with 🏗 scaffold-eth (\n        <a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\" rel=\"noopener noreferrer\">\n          learn more\n        </a>\n        ):\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>⛓️</span>\n        Make sure your local chain is running first:\n        <span className=\"highlight\" style={highlight}>\n          yarn chain\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚮</span>\n        Clean up previous data, if there is any:\n        <span className=\"highlight\" style={highlight}>\n          yarn clean-graph-node\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        Spin up a local graph node by running\n        <span className=\"highlight\" style={highlight}>\n          yarn run-graph-node\n        </span>\n        <span style={{ marginLeft: 4 }}>\n          {\" \"}\n          (requires{\" \"}\n          <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            Docker\n          </a>\n          ){\" \"}\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📝</span>\n        Create your <b>local subgraph</b> by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-create-local\n        </span>\n        (only required once!)\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        Deploy your <b>local subgraph</b> by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-ship-local\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🖍️</span>\n        Edit your <b>local subgraph</b> in\n        <span className=\"highlight\" style={highlight}>\n          packages/subgraph/src\n        </span>\n        (learn more about subgraph definition{\" \"}\n        <a\n          href=\"https://thegraph.com/docs/en/developer/define-subgraph-hosted/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          here\n        </a>\n        )\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🤩</span>\n        Deploy your <b>contracts and your subgraph</b> in one go by running\n        <span className=\"highlight\" style={highlight}>\n          yarn deploy-and-graph\n        </span>\n      </div>\n\n      <div style={{ width: 780, margin: \"auto\", paddingBottom: 64 }}>\n        <div style={{ margin: 32, textAlign: \"right\" }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            onClick={() => {\n              console.log(\"newPurpose\", newPurpose);\n              /* look how you call setPurpose on your contract: */\n              props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\n            }}\n          >\n            Set Purpose\n          </Button>\n        </div>\n\n        {data ? (\n          <Table dataSource={data.purposes} columns={purposeColumns} rowKey=\"id\" />\n        ) : (\n          <Typography>{loading ? \"Loading...\" : deployWarning}</Typography>\n        )}\n\n        <div style={{ margin: 32, height: 400, border: \"1px solid #888888\", textAlign: \"left\" }}>\n          <GraphiQL fetcher={graphQLFetcher} docExplorerOpen query={EXAMPLE_GRAPHQL} />\n        </div>\n      </div>\n\n      <div style={{ padding: 64 }}>...</div>\n    </>\n  );\n}\n\nexport default Subgraph;\n","import { Button, Col, Menu, Row } from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  // useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { getRPCPollTime, Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Subgraph } from \"./views\";\nimport { useStaticJsonRPC, useGasPrice } from \"./hooks\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst initialNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, goerli, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\nconst USE_NETWORK_SELECTOR = false;\n\nconst web3Modal = Web3ModalSetup();\n\n// 🛰 providers\nconst providers = [\n  \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n  `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n  \"https://rpc.scaffoldeth.io:48544\",\n];\n\nfunction App(props) {\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"goerli\"];\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const location = useLocation();\n\n  const targetNetwork = NETWORKS[selectedNetwork];\n\n  // 🔭 block explorer URL\n  const blockExplorer = targetNetwork.blockExplorer;\n\n  // load all your providers\n  const localProvider = useStaticJsonRPC([\n    process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n  ]);\n\n  const mainnetProvider = useStaticJsonRPC(providers, localProvider);\n\n  // Sensible pollTimes depending on the provider you are using\n  const localProviderPollingTime = getRPCPollTime(localProvider);\n  const mainnetProviderPollingTime = getRPCPollTime(mainnetProvider);\n\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n\n  // 🛰 providers\n  if (DEBUG) console.log(\"📡 Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider, mainnetProviderPollingTime);\n\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"FastGasPrice\", localProviderPollingTime);\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address, localProviderPollingTime);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address, mainnetProviderPollingTime);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  // useOnBlock(mainnetProvider, () => {\n  //   console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  // });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(\n    mainnetContracts,\n    \"DAI\",\n    \"balanceOf\",\n    [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"],\n    mainnetProviderPollingTime,\n  );\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\", [], localProviderPollingTime);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\", addressFromENS)\n  */\n\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n    localChainId,\n    myMainnetDAIBalance,\n  ]);\n\n  const loadWeb3Modal = useCallback(async () => {\n    //const provider = await web3Modal.connect();\n    const provider = await web3Modal.requestProvider();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n    //automatically connect if it is a safe app\n    const checkSafeApp = async () => {\n      if (await web3Modal.isSafeApp()) {\n        loadWeb3Modal();\n      }\n    };\n    checkSafeApp();\n  }, [loadWeb3Modal]);\n\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header>\n        {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n        <div style={{ position: \"relative\", display: \"flex\", flexDirection: \"column\" }}>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            {USE_NETWORK_SELECTOR && (\n              <div style={{ marginRight: 20 }}>\n                <NetworkSwitch\n                  networkOptions={networkOptions}\n                  selectedNetwork={selectedNetwork}\n                  setSelectedNetwork={setSelectedNetwork}\n                />\n              </div>\n            )}\n            <Account\n              useBurner={USE_BURNER_WALLET}\n              address={address}\n              localProvider={localProvider}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              price={price}\n              web3Modal={web3Modal}\n              loadWeb3Modal={loadWeb3Modal}\n              logoutOfWeb3Modal={logoutOfWeb3Modal}\n              blockExplorer={blockExplorer}\n            />\n          </div>\n        </div>\n      </Header>\n      {yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && (\n        <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n      )}\n      <NetworkDisplay\n        NETWORKCHECK={NETWORKCHECK}\n        localChainId={localChainId}\n        selectedChainId={selectedChainId}\n        targetNetwork={targetNetwork}\n        logoutOfWeb3Modal={logoutOfWeb3Modal}\n        USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n      />\n      <Menu style={{ textAlign: \"center\", marginTop: 20 }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n        <Menu.Item key=\"/\">\n          <Link to=\"/\">App Home</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/debug\">\n          <Link to=\"/debug\">Debug Contracts</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/hints\">\n          <Link to=\"/hints\">Hints</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/exampleui\">\n          <Link to=\"/exampleui\">ExampleUI</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/mainnetdai\">\n          <Link to=\"/mainnetdai\">Mainnet DAI</Link>\n        </Menu.Item>\n        <Menu.Item key=\"/subgraph\">\n          <Link to=\"/subgraph\">Subgraph</Link>\n        </Menu.Item>\n      </Menu>\n\n      <Switch>\n        <Route exact path=\"/\">\n          {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n          <Home yourLocalBalance={yourLocalBalance} readContracts={readContracts} />\n        </Route>\n        <Route exact path=\"/debug\">\n          {/*\n                🎛 this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n          <Contract\n            name=\"YourContract\"\n            price={price}\n            signer={userSigner}\n            provider={localProvider}\n            address={address}\n            blockExplorer={blockExplorer}\n            contractConfig={contractConfig}\n          />\n        </Route>\n        <Route path=\"/hints\">\n          <Hints\n            address={address}\n            yourLocalBalance={yourLocalBalance}\n            mainnetProvider={mainnetProvider}\n            price={price}\n          />\n        </Route>\n        <Route path=\"/exampleui\">\n          <ExampleUI\n            address={address}\n            userSigner={userSigner}\n            mainnetProvider={mainnetProvider}\n            localProvider={localProvider}\n            yourLocalBalance={yourLocalBalance}\n            price={price}\n            tx={tx}\n            writeContracts={writeContracts}\n            readContracts={readContracts}\n            purpose={purpose}\n          />\n        </Route>\n        <Route path=\"/mainnetdai\">\n          <Contract\n            name=\"DAI\"\n            customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI}\n            signer={userSigner}\n            provider={mainnetProvider}\n            address={address}\n            blockExplorer=\"https://etherscan.io/\"\n            contractConfig={contractConfig}\n            chainId={1}\n          />\n          {/*\n            <Contract\n              name=\"UNI\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.UNI}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer=\"https://etherscan.io/\"\n            />\n            */}\n        </Route>\n        <Route path=\"/subgraph\">\n          <Subgraph\n            subgraphUri={props.subgraphUri}\n            tx={tx}\n            writeContracts={writeContracts}\n            mainnetProvider={mainnetProvider}\n          />\n        </Route>\n      </Switch>\n\n      <ThemeSwitch />\n\n      {/* 🗺 Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                💬\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\nimport { usePoller } from \"eth-hooks\";\nimport { useState } from \"react\";\nimport { ETHERSCAN_KEY } from \"../constants\";\n\nexport default function useGasPrice(targetNetwork, speed, pollTime = 39999) {\n  const [gasPrice, setGasPrice] = useState();\n  const loadGasPrice = async () => {\n    if (targetNetwork.hasOwnProperty(\"gasPrice\")) {\n      setGasPrice(targetNetwork.gasPrice);\n    } else {\n      axios\n        .get(\"https://api.etherscan.io/api?module=gastracker&action=gasoracle&apikey=\" + ETHERSCAN_KEY)\n        .then(response => {\n          console.log(\"response gas: \", response);\n          const newGasPrice = response.data.result[speed || \"FastGasPrice\"] * 1000000000;\n          if (newGasPrice !== gasPrice) {\n            setGasPrice(newGasPrice);\n          }\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  usePoller(loadGasPrice, 39999);\n  return gasPrice;\n}\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <BrowserRouter>\n        <App subgraphUri={subgraphUri} />\n      </BrowserRouter>\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = process.env.REACT_APP_INFURA_KEY ?? \"460f40a260564ac4a4f4b3fffb032dad\";\n// My Alchemy Key, swap in yours from https://dashboard.alchemyapi.io/\nexport const ALCHEMY_KEY = process.env.REACT_APP_ALCHEMY_KEY ?? \"oKxs-03sij-U_N0iOlrSsZFr29-IqbuF\";\n\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = process.env.REACT_APP_ETHERSCAN_API_KEY ?? \"DNXJA8RX2Q3VZ4URQIWP7Z68CJXQZSC6AW\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = process.env.REACT_APP_BLOCKNATIVE_DAPP_ID ?? \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\n// Docker Hardhat Host\nexport const HARDHAT_HOST = process.env.REACT_APP_HARDHAT_HOST ?? \"http://localhost\";\n\n/*\nDecrease the number of RPC calls by passing this value to hooks\nwith pollTime (useContractReader, useBalance, etc.).\nSet it to 0 to disable it and make RPC calls \"onBlock\".\nNote: this is not used when you are in the local hardhat chain.\n*/\nexport const RPC_POLL_TIME = 30000;\n\nconst localRpcUrl = process.env.REACT_APP_CODESPACES\n  ? `https://${window.location.hostname.replace(\"3000\", \"8545\")}`\n  : \"http://\" + (global.window ? window.location.hostname : \"localhost\") + \":8545\";\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: localRpcUrl,\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  sepolia: {\n    name: \"sepolia\",\n    color: \"#87ff65\",\n    chainId: 11155111,\n    faucet: \"https://faucet.sepolia.dev/\",\n    blockExplorer: \"https://sepolia.etherscan.io/\",\n    rpcUrl: `https://sepolia.infura.io/v3/${INFURA_ID}`,\n  },\n  gnosis: {\n    name: \"gnosis\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc.gnosischain.com/\",\n    faucet: \"https://gnosisfaucet.com/\",\n    blockExplorer: \"https://gnosisscan.io/\",\n  },\n  zksyncalpha: {\n    name: \"zksyncalpha\",\n    color: \"#45488f\",\n    chainId: 280,\n    rpcUrl: \"https://zksync2-testnet.zksync.dev\",\n    blockExplorer: \"https://goerli.explorer.zksync.io/\",\n    gasPrice: 100000000,\n  },\n  chiado: {\n    name: \"chiado\",\n    color: \"#48a9a6\",\n    chainId: 10200,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc.chiadochain.net/\",\n    faucet: \"https://gnosisfaucet.com/\",\n    blockExplorer: \"https://blockscout.chiadochain.net/\",\n  },\n  polygon: {\n    name: \"polygon\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://polygon-rpc.com/\",\n    blockExplorer: \"https://polygonscan.com/\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\n    faucet: \"https://faucet.polygon.technology/\",\n    blockExplorer: \"https://mumbai.polygonscan.com/\",\n  },\n  localOptimismL1: {\n    name: \"localOptimismL1\",\n    color: \"#f01a37\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + (global.window ? window.location.hostname : \"localhost\") + \":9545\",\n  },\n  localOptimism: {\n    name: \"localOptimism\",\n    color: \"#f01a37\",\n    chainId: 420,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + (global.window ? window.location.hostname : \"localhost\") + \":8545\",\n    gasPrice: 0,\n  },\n  goerliOptimism: {\n    name: \"goerliOptimism\",\n    color: \"#f01a37\",\n    chainId: 420,\n    blockExplorer: \"https://optimism.io\",\n    rpcUrl: `https://goerli.optimism.io/`,\n    gasPrice: 0,\n  },\n  optimism: {\n    name: \"optimism\",\n    color: \"#f01a37\",\n    chainId: 10,\n    blockExplorer: \"https://optimistic.etherscan.io/\",\n    rpcUrl: `https://mainnet.optimism.io`,\n  },\n  goerliArbitrum: {\n    name: \"goerliArbitrum\",\n    color: \"#28a0f0\",\n    chainId: 421613,\n    blockExplorer: \"https://goerli-rollup-explorer.arbitrum.io\",\n    rpcUrl: \"https://goerli-rollup.arbitrum.io/rpc/\",\n  },\n  arbitrum: {\n    name: \"arbitrum\",\n    color: \"#28a0f0\",\n    chainId: 42161,\n    blockExplorer: \"https://arbiscan.io/\",\n    rpcUrl: \"https://arb1.arbitrum.io/rpc\",\n  },\n  devnetArbitrum: {\n    name: \"devnetArbitrum\",\n    color: \"#28a0f0\",\n    chainId: 421612,\n    blockExplorer: \"https://nitro-devnet-explorer.arbitrum.io/\",\n    rpcUrl: \"https://nitro-devnet.arbitrum.io/rpc\",\n  },\n  localAvalanche: {\n    name: \"localAvalanche\",\n    color: \"#666666\",\n    chainId: 43112,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  fujiAvalanche: {\n    name: \"fujiAvalanche\",\n    color: \"#666666\",\n    chainId: 43113,\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  mainnetAvalanche: {\n    name: \"mainnetAvalanche\",\n    color: \"#666666\",\n    chainId: 43114,\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  testnetHarmony: {\n    name: \"testnetHarmony\",\n    color: \"#00b0ef\",\n    chainId: 1666700000,\n    blockExplorer: \"https://explorer.pops.one/\",\n    rpcUrl: `https://api.s0.b.hmny.io`,\n    gasPrice: 1000000000,\n  },\n  mainnetHarmony: {\n    name: \"mainnetHarmony\",\n    color: \"#00b0ef\",\n    chainId: 1666600000,\n    blockExplorer: \"https://explorer.harmony.one/\",\n    rpcUrl: `https://api.harmony.one`,\n    gasPrice: 1000000000,\n  },\n  fantom: {\n    name: \"fantom\",\n    color: \"#1969ff\",\n    chainId: 250,\n    blockExplorer: \"https://ftmscan.com/\",\n    rpcUrl: `https://rpcapi.fantom.network`,\n    gasPrice: 1000000000,\n  },\n  testnetFantom: {\n    name: \"testnetFantom\",\n    color: \"#1969ff\",\n    chainId: 4002,\n    blockExplorer: \"https://testnet.ftmscan.com/\",\n    rpcUrl: `https://rpc.testnet.fantom.network`,\n    gasPrice: 1000000000,\n    faucet: \"https://faucet.fantom.network/\",\n  },\n  moonbeam: {\n    name: \"moonbeam\",\n    color: \"#53CBC9\",\n    chainId: 1284,\n    blockExplorer: \"https://moonscan.io\",\n    rpcUrl: \"https://rpc.api.moonbeam.network\",\n  },\n  moonriver: {\n    name: \"moonriver\",\n    color: \"#53CBC9\",\n    chainId: 1285,\n    blockExplorer: \"https://moonriver.moonscan.io/\",\n    rpcUrl: \"https://rpc.api.moonriver.moonbeam.network\",\n  },\n  moonbaseAlpha: {\n    name: \"moonbaseAlpha\",\n    color: \"#53CBC9\",\n    chainId: 1287,\n    blockExplorer: \"https://moonbase.moonscan.io/\",\n    rpcUrl: \"https://rpc.api.moonbase.moonbeam.network\",\n    faucet: \"https://discord.gg/SZNP8bWHZq\",\n  },\n  moonbeamDevNode: {\n    name: \"moonbeamDevNode\",\n    color: \"#53CBC9\",\n    chainId: 1281,\n    blockExplorer: \"https://moonbeam-explorer.netlify.app/\",\n    rpcUrl: \"http://127.0.0.1:9933\",\n  },\n};\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n","const ERC20ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n];\nconst DAIABI = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"chainId_\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"guy\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: true,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes4\",\n        name: \"sig\",\n        type: \"bytes4\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"arg1\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"arg2\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"LogNote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"guy\",\n        type: \"address\",\n      },\n    ],\n    name: \"deny\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"move\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"holder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"allowed\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"pull\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"push\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"guy\",\n        type: \"address\",\n      },\n    ],\n    name: \"rely\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"wards\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\n// Mainnet DAI, Optimism and Arbitrium Rollup Contracts with local addresses\nmodule.exports = {\n  1: {\n    contracts: {\n      DAI: {\n        address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n        abi: DAIABI,\n      },\n      UNI: {\n        address: \"0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984\",\n        abi: ERC20ABI,\n      },\n    },\n  },\n};\n"],"sourceRoot":""}