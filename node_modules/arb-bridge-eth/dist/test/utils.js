"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tryAdvanceChain = exports.initializeAccounts = void 0;
const hardhat_1 = require("hardhat");
async function initializeAccounts() {
    const [account0] = await hardhat_1.ethers.getSigners();
    const provider = account0.provider;
    const accounts = [account0];
    for (let i = 0; i < 9; i++) {
        const account = hardhat_1.ethers.Wallet.createRandom().connect(provider);
        accounts.push(account);
        const tx = await account0.sendTransaction({
            value: hardhat_1.ethers.utils.parseEther('1.0'),
            to: await account.getAddress(),
        });
        await tx.wait();
    }
    return accounts;
}
exports.initializeAccounts = initializeAccounts;
async function tryAdvanceChain(account, blocks) {
    try {
        for (let i = 0; i < blocks; i++) {
            await hardhat_1.ethers.provider.send('evm_mine', []);
        }
    }
    catch (e) {
        // EVM mine failed. Try advancing the chain by sending txes if the node
        // is in dev mode and mints blocks when txes are sent
        for (let i = 0; i < blocks; i++) {
            const tx = await account.sendTransaction({
                value: 0,
                to: await account.getAddress(),
            });
            await tx.wait();
        }
    }
}
exports.tryAdvanceChain = tryAdvanceChain;
