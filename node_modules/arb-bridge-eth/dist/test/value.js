"use strict";
/*
 * Copyright 2019-2020, Offchain Labs, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-env node, mocha */
const hardhat_1 = require("hardhat");
const chai_1 = require("chai");
const test_cases_json_1 = __importDefault(require("./test_cases.json"));
const testVal = '0x5345325345325345325345325345325345325345325345325345325345325435';
describe('Value', () => {
    let valueTester;
    before(async () => {
        const ValueTester = await hardhat_1.ethers.getContractFactory('ValueTester');
        valueTester = (await ValueTester.deploy());
        await valueTester.deployed();
    });
    for (let i = 0; i < test_cases_json_1.default.length; i++) {
        it(test_cases_json_1.default[i].name, async () => {
            const expectedHash = test_cases_json_1.default[i].hash;
            const res = await valueTester.deserializeHash('0x' + test_cases_json_1.default[i].proof_value, 0);
            chai_1.assert.equal('0x' + expectedHash, res['1'], 'value hashes incorrectly');
        });
    }
});
