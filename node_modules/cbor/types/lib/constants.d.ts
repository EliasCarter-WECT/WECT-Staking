export namespace MT {
<<<<<<< HEAD
    const POS_INT: number;
    const NEG_INT: number;
    const BYTE_STRING: number;
    const UTF8_STRING: number;
    const ARRAY: number;
    const MAP: number;
    const TAG: number;
    const SIMPLE_FLOAT: number;
}
export type MT = number;
export namespace TAG {
    const DATE_STRING: number;
    const DATE_EPOCH: number;
    const POS_BIGINT: number;
    const NEG_BIGINT: number;
    const DECIMAL_FRAC: number;
    const BIGFLOAT: number;
    const BASE64URL_EXPECTED: number;
    const BASE64_EXPECTED: number;
    const BASE16_EXPECTED: number;
    const CBOR: number;
    const URI: number;
    const BASE64URL: number;
    const BASE64: number;
    const REGEXP: number;
    const MIME: number;
    const SET: number;
}
export type TAG = number;
export namespace NUMBYTES {
    const ZERO: number;
    const ONE: number;
    const TWO: number;
    const FOUR: number;
    const EIGHT: number;
    const INDEFINITE: number;
}
export type NUMBYTES = number;
export namespace SIMPLE {
    const FALSE: number;
    const TRUE: number;
    const NULL: number;
    const UNDEFINED: number;
}
export type SIMPLE = number;
export namespace SYMS {
    const NULL_1: symbol;
    export { NULL_1 as NULL };
    const UNDEFINED_1: symbol;
    export { UNDEFINED_1 as UNDEFINED };
    export const PARENT: symbol;
    export const BREAK: symbol;
    export const STREAM: symbol;
}
export var SHIFT32: number;
export namespace BI {
    const MINUS_ONE: bigint;
    const NEG_MAX: bigint;
    const MAXINT32: bigint;
    const MAXINT64: bigint;
    const SHIFT32: bigint;
=======
    let POS_INT: number;
    let NEG_INT: number;
    let BYTE_STRING: number;
    let UTF8_STRING: number;
    let ARRAY: number;
    let MAP: number;
    let TAG: number;
    let SIMPLE_FLOAT: number;
}
export type MT = number;
export namespace TAG {
    let DATE_STRING: number;
    let DATE_EPOCH: number;
    let POS_BIGINT: number;
    let NEG_BIGINT: number;
    let DECIMAL_FRAC: number;
    let BIGFLOAT: number;
    let BASE64URL_EXPECTED: number;
    let BASE64_EXPECTED: number;
    let BASE16_EXPECTED: number;
    let CBOR: number;
    let URI: number;
    let BASE64URL: number;
    let BASE64: number;
    let REGEXP: number;
    let MIME: number;
    let SET: number;
}
export type TAG = number;
export namespace NUMBYTES {
    let ZERO: number;
    let ONE: number;
    let TWO: number;
    let FOUR: number;
    let EIGHT: number;
    let INDEFINITE: number;
}
export type NUMBYTES = number;
export namespace SIMPLE {
    let FALSE: number;
    let TRUE: number;
    let NULL: number;
    let UNDEFINED: number;
}
export type SIMPLE = number;
export namespace SYMS {
    let NULL_1: symbol;
    export { NULL_1 as NULL };
    let UNDEFINED_1: symbol;
    export { UNDEFINED_1 as UNDEFINED };
    export let PARENT: symbol;
    export let BREAK: symbol;
    export let STREAM: symbol;
}
export const SHIFT32: 4294967296;
export namespace BI {
    let MINUS_ONE: bigint;
    let NEG_MAX: bigint;
    let MAXINT32: bigint;
    let MAXINT64: bigint;
    let SHIFT32: bigint;
>>>>>>> ba11e9b4e (Initial commit after reset)
}
