/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { NodeInterface, NodeInterfaceInterface } from "../NodeInterface";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "size",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "leaf",
        type: "uint64",
      },
    ],
    name: "constructOutboxProof",
    outputs: [
      {
        internalType: "bytes32",
        name: "send",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2CallValue",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "excessFeeRefundAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "callValueRefundAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "estimateRetryableTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "blockNum",
        type: "uint64",
      },
    ],
    name: "findBatchContainingBlock",
    outputs: [
      {
        internalType: "uint64",
        name: "batch",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "getL1Confirmations",
    outputs: [
      {
        internalType: "uint64",
        name: "confirmations",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class NodeInterface__factory {
  static readonly abi = _abi;
  static createInterface(): NodeInterfaceInterface {
    return new utils.Interface(_abi) as NodeInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NodeInterface {
    return new Contract(address, _abi, signerOrProvider) as NodeInterface;
  }
}
