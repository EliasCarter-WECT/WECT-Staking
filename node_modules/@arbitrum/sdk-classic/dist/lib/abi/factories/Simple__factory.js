"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Simple__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "counter",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "increment",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061011a806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806361bc221a146037578063d09de08a146067575b600080fd5b600054604a9067ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200160405180910390f35b606d606f565b005b6000805467ffffffffffffffff16908060868360af565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b600067ffffffffffffffff8083168181141560da57634e487b7160e01b600052601160045260246000fd5b600101939250505056fea2646970667358221220e27eb36feeb211e560e363577f33bac94a128337795ce10c16db32f06c5ff90f64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class Simple__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "Simple";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Simple__factory = Simple__factory;
Simple__factory.bytecode = _bytecode;
Simple__factory.abi = _abi;
