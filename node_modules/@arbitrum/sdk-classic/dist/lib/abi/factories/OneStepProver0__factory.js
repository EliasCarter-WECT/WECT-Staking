"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OneStepProver0__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxInboxMessagesRead",
                        type: "uint256",
                    },
                    {
                        internalType: "contract ISequencerInbox",
                        name: "sequencerInbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IBridge",
                        name: "delayedBridge",
                        type: "address",
                    },
                ],
                internalType: "struct ExecutionContext",
                name: "",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum MachineStatus",
                        name: "status",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "valueStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "internalStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint32[]",
                                        name: "inner",
                                        type: "uint32[]",
                                    },
                                ],
                                internalType: "struct PcArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct PcStack",
                        name: "blockStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value",
                                        name: "returnPc",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "localsMerkleRoot",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModule",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModuleInternals",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct StackFrame[]",
                                name: "proved",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct StackFrameWindow",
                        name: "frameStack",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "globalStateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "moduleIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionPc",
                        type: "uint32",
                    },
                    {
                        internalType: "bytes32",
                        name: "modulesRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Machine",
                name: "startMach",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "globalsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "size",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ModuleMemory",
                        name: "moduleMemory",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "tablesMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "functionsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "internalsOffset",
                        type: "uint32",
                    },
                ],
                internalType: "struct Module",
                name: "startMod",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint16",
                        name: "opcode",
                        type: "uint16",
                    },
                    {
                        internalType: "uint256",
                        name: "argumentData",
                        type: "uint256",
                    },
                ],
                internalType: "struct Instruction",
                name: "inst",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
            },
        ],
        name: "executeOneStep",
        outputs: [
            {
                components: [
                    {
                        internalType: "enum MachineStatus",
                        name: "status",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "valueStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "internalStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint32[]",
                                        name: "inner",
                                        type: "uint32[]",
                                    },
                                ],
                                internalType: "struct PcArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct PcStack",
                        name: "blockStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value",
                                        name: "returnPc",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "localsMerkleRoot",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModule",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModuleInternals",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct StackFrame[]",
                                name: "proved",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct StackFrameWindow",
                        name: "frameStack",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "globalStateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "moduleIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionPc",
                        type: "uint32",
                    },
                    {
                        internalType: "bytes32",
                        name: "modulesRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Machine",
                name: "mach",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "globalsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "size",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ModuleMemory",
                        name: "moduleMemory",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "tablesMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "functionsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "internalsOffset",
                        type: "uint32",
                    },
                ],
                internalType: "struct Module",
                name: "mod",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50612b28806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063787569bc14610030575b600080fd5b61004361003e366004611f87565b61005a565b6040516100519291906121dc565b60405180910390f35b610062611dfe565b61006a611ecd565b6100738761275a565b91506100843687900387018761286c565b905060006100956020870187612902565b9050611f1261ffff82166100ac575061033d61031f565b61ffff8216600114156100c2575061034861031f565b61ffff8216600214156100d8575061034f61031f565b61ffff8216600c14156100ee57506103af61031f565b61ffff8216600d141561010457506103d261031f565b61ffff8216600f141561011a575061041861031f565b61ffff821660101415610130575061054561031f565b61ffff8216618009141561014757506105e061031f565b61ffff821661800a141561015e575061068d61031f565b61ffff821660111415610174575061077b61031f565b61ffff8216618000141561018b5750610b5861031f565b61ffff821661800114156101a25750610b6561031f565b61ffff821661800314156101b95750610b9b61031f565b61ffff8216602014156101cf5750610be561031f565b61ffff8216602114156101e55750610c1e61031f565b61ffff8216602314156101fb5750610c6361031f565b61ffff8216602414156102115750610c8b61031f565b61ffff821661800214156102285750610cbb61031f565b61ffff8216601a141561023e5750610d5861031f565b61ffff8216601b14156102545750610d6561031f565b604161ffff83161080159061026e5750604461ffff831611155b8061027e575061ffff8216618004145b1561028c5750610dd461031f565b61ffff821661800514806102a5575061ffff8216618006145b156102b35750610ede61031f565b61ffff821661800714156102ca5750610fb161031f565b61ffff821661800814156102e15750610fef61031f565b60405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f4f50434f444560901b60448201526064015b60405180910390fd5b61033084848989898663ffffffff16565b5050965096945050505050565b505060029092525050565b5050505050565b602083013563ffffffff811681146103985760405162461bcd60e51b815260206004820152600c60248201526b4241445f424c4f434b5f504360a01b6044820152606401610316565b60608601516103a79082610ffe565b505050505050565b6103bc856060015161100e565b63ffffffff166101009095019490945250505050565b60006103e96103e48760200151611023565b611042565b905063ffffffff8116156103a757610404866060015161100e565b63ffffffff16610100870152505050505050565b600061042786608001516110d3565b90506004815151600781111561043f5761043f61204b565b1415610466578560025b9081600381111561045c5761045c61204b565b8152505050610348565b6006815151600781111561047c5761047c61204b565b146104c25760405162461bcd60e51b8152602060048201526016602482015275494e56414c49445f52455455524e5f50435f5459504560501b6044820152606401610316565b805160209081015190819081901c604082901c606083901c156105205760405162461bcd60e51b8152602060048201526016602482015275494e56414c49445f52455455524e5f50435f4441544160501b6044820152606401610316565b63ffffffff9283166101008b015290821660e08a01521660c088015250505050505050565b61055c61055186611173565b6020870151906111d7565b600061056b86608001516111e3565b905061058861057d826040015161122f565b6020880151906111d7565b61059861057d826060015161122f565b602084013563ffffffff811681146105c25760405162461bcd60e51b815260040161031690612926565b63ffffffff1660e08701525050600061010090940193909352505050565b6105ec61055186611173565b6105fc6105518660c0015161122f565b61060c610551856080015161122f565b6020808401359081901c604082901c156106685760405162461bcd60e51b815260206004820152601a60248201527f4241445f43524f53535f4d4f44554c455f43414c4c5f444154410000000000006044820152606401610316565b63ffffffff90811660c08801521660e086015250506000610100909301929092525050565b61069961055186611173565b6106a96105518660c0015161122f565b6106b9610551856080015161122f565b60006106c886608001516111e3565b9050806060015163ffffffff16600014156106e557856002610449565b602084013563ffffffff8116811461073f5760405162461bcd60e51b815260206004820152601d60248201527f4241445f43414c4c45525f494e5445524e414c5f43414c4c5f444154410000006044820152606401610316565b604082015163ffffffff1660c0880152606082015161075f908290612963565b63ffffffff1660e0880152505060006101008601525050505050565b60008061078e6103e48860200151611023565b90506000806000808060006107af6040518060200160405280606081525090565b6107ba8b8b87611262565b955093506107c98b8b876112c9565b90965094506107d98b8b876112e5565b955092506107e88b8b87611262565b955091506107f78b8b876112c9565b90975094506108078b8b8761131b565b6040516d21b0b6361034b73234b932b1ba1d60911b60208201526001600160c01b031960c088901b16602e8201526036810189905290965090915060009060560160408051601f19818403018152919052805160209182012091508d013581146108ac5760405162461bcd60e51b81526020600482015260166024820152754241445f43414c4c5f494e4449524543545f4441544160501b6044820152606401610316565b6108c2826001600160401b03871686868c6113f5565b90508d6040015181146109095760405162461bcd60e51b815260206004820152600f60248201526e10905117d51050931154d7d493d3d5608a1b6044820152606401610316565b826001600160401b03168963ffffffff161061093357505060028d52506103489650505050505050565b50505050506000610954604080518082019091526000808252602082015290565b60408051602081019091526060815261096e8a8a866112c9565b9450925061097d8a8a86611497565b9450915061098c8a8a8661131b565b9450905060006109a98263ffffffff808b16908790879061159316565b90508681146109ee5760405162461bcd60e51b815260206004820152601160248201527010905117d153115351539514d7d493d3d5607a1b6044820152606401610316565b858414610a1e578d60025b90816003811115610a0c57610a0c61204b565b81525050505050505050505050610348565b600483516007811115610a3357610a3361204b565b1415610a41578d60026109f9565b600583516007811115610a5657610a5661204b565b1415610ab5576020830151985063ffffffff89168914610ab05760405162461bcd60e51b81526020600482015260156024820152744241445f46554e435f5245465f434f4e54454e545360581b6044820152606401610316565b610aed565b60405162461bcd60e51b815260206004820152600d60248201526c4241445f454c454d5f5459504560981b6044820152606401610316565b5050505050505050610b0161057d87611173565b6000610b1087608001516111e3565b9050610b2d610b22826040015161122f565b6020890151906111d7565b610b3d610b22826060015161122f565b5063ffffffff1660e086015260006101008601525050505050565b6103a7856060015161100e565b6000610b776103e4876020015161162d565b905063ffffffff8116156103a757610b92866060015161100e565b50505050505050565b6000610bad6103e48760200151611023565b905063ffffffff8116156103a757602084013563ffffffff811681146104045760405162461bcd60e51b815260040161031690612926565b6000610bf486608001516111e3565b90506000610c0c826020015186602001358686611662565b6020880151909150610b9290826111d7565b6000610c2d8660200151611023565b90506000610c3e87608001516111e3565b9050610c55816020015186602001358487876116fa565b602090910152505050505050565b6000610c79856000015185602001358585611662565b60208701519091506103a790826111d7565b6000610c9a8660200151611023565b9050610cb1856000015185602001358386866116fa565b9094525050505050565b6000610cca8660200151611023565b90506000610cdb8760200151611023565b90506000610cec8860200151611023565b905060006040518060800160405280838152602001886020013560001b8152602001610d1785611042565b63ffffffff168152602001610d2b86611042565b63ffffffff168152509050610d4d818a6080015161179490919063ffffffff16565b505050505050505050565b6103a78560200151611023565b6000610d776103e48760200151611023565b90506000610d888760200151611023565b90506000610d998860200151611023565b905063ffffffff831615610dbb576020880151610db690826111d7565b610dca565b6020880151610dca90836111d7565b5050505050505050565b6000610de36020850185612902565b9050600061ffff821660411415610dfc57506000610e95565b61ffff821660421415610e1157506001610e95565b61ffff821660431415610e2657506002610e95565b61ffff821660441415610e3b57506003610e95565b61ffff82166180041415610e5157506007610e95565b60405162461bcd60e51b8152602060048201526019602482015278434f4e53545f505553485f494e56414c49445f4f50434f444560381b6044820152606401610316565b610b926040518060400160405280836007811115610eb557610eb561204b565b815260200187602001356001600160401b031681525088602001516111d790919063ffffffff16565b6040805180820190915260008082526020820152618005610f026020860186612902565b61ffff161415610f3057610f198660200151611023565b6040870151909150610f2b90826111d7565b6103a7565b618006610f406020860186612902565b61ffff161415610f6957610f578660400151611023565b6020870151909150610f2b90826111d7565b60405162461bcd60e51b815260206004820152601c60248201527f4d4f56455f494e5445524e414c5f494e56414c49445f4f50434f4445000000006044820152606401610316565b6000610fc08660200151611023565b90506000600782516007811115610fd957610fd961204b565b1415610fe3575060015b610b92610b228261122f565b6000610c79866020015161162d565b815161100a908261187b565b5050565b600061101d8260000151611965565b92915050565b6040805180820190915260008082526020820152815161101d90611a4b565b6020810151600090818351600781111561105e5761105e61204b565b146110955760405162461bcd60e51b81526020600482015260076024820152662727aa2fa4999960c91b6044820152606401610316565b640100000000811061101d5760405162461bcd60e51b81526020600482015260076024820152662120a22fa4999960c91b6044820152606401610316565b6110db611f1c565b8151516001146110fd5760405162461bcd60e51b81526004016103169061298b565b81518051600090611110576111106129b6565b6020026020010151905060006001600160401b038111156111335761113361231c565b60405190808252806020026020018201604052801561116c57816020015b611159611f1c565b8152602001906001900390816111515790505b5090915290565b604080518082018252600080825260209182015261010083015160e084015160c090940151835180850185526006815263ffffffff90921694831b67ffffffff0000000016949094179390921b63ffffffff60401b16929092179181019190915290565b815161100a9082611b54565b6111eb611f1c565b81515160011461120d5760405162461bcd60e51b81526004016103169061298b565b81518051600090611220576112206129b6565b60200260200101519050919050565b604080518082019091526000808252602082015250604080518082019091526000815263ffffffff909116602082015290565b600081815b60088110156112c0576008836001600160401b0316901b9250858583818110611292576112926129b6565b919091013560f81c939093179250816112aa816129cc565b92505080806112b8906129cc565b915050611267565b50935093915050565b600081816112d8868684611c1d565b9097909650945050505050565b6000818484828181106112fa576112fa6129b6565b919091013560f81c9250819050611310816129cc565b915050935093915050565b6040805160208101909152606081528160006113388686846112e5565b92509050600060ff82166001600160401b038111156113595761135961231c565b604051908082528060200260200182016040528015611382578160200160208202803683370190505b50905060005b8260ff168160ff1610156113d9576113a18888866112c9565b838360ff16815181106113b6576113b66129b6565b6020026020010181965082815250505080806113d1906129e7565b915050611388565b5060405180602001604052808281525093505050935093915050565b604051652a30b136329d60d11b60208201526001600160f81b031960f885901b1660268201526001600160c01b031960c084901b166027820152602f81018290526000908190604f0160405160208183030381529060405280519060200120905061148c878783604051806040016040528060128152602001712a30b136329036b2b935b632903a3932b29d60711b815250611c72565b979650505050505050565b60408051808201909152600080825260208201528160008585838181106114c0576114c06129b6565b919091013560f81c91508290506114d6816129cc565b9250506114e1600790565b60078111156114f2576114f261204b565b60ff168160ff1611156115385760405162461bcd60e51b815260206004820152600e60248201526d4241445f56414c55455f5459504560901b6044820152606401610316565b6000611545878785611c1d565b809450819250505060405180604001604052808360ff16600781111561156d5761156d61204b565b600781111561157e5761157e61204b565b81526020018281525093505050935093915050565b600080836115a084611d44565b6040516d2a30b136329032b632b6b2b73a1d60911b6020820152602e810192909252604e820152606e016040516020818303038152906040528051906020012090506116238686836040518060400160405280601a81526020017f5461626c6520656c656d656e74206d65726b6c6520747265653a000000000000815250611c72565b9695505050505050565b60408051808201909152600080825260208201528151515161165b611653600183612a07565b845190611d7e565b9392505050565b60408051808201909152600080825260208201526000611692604080518082019091526000808252602082015290565b6040805160208101909152606081526116ac868685611497565b935091506116bb86868561131b565b9350905060006116cc828985611db6565b90508881146116ed5760405162461bcd60e51b815260040161031690612a1e565b5090979650505050505050565b6000611716604080518082019091526000808252602082015290565b600061172e6040518060200160405280606081525090565b611739868684611497565b909350915061174986868461131b565b92509050600061175a828a86611db6565b905089811461177b5760405162461bcd60e51b815260040161031690612a1e565b611786828a8a611db6565b9a9950505050505050505050565b8151516000906117a5906001612a49565b6001600160401b038111156117bc576117bc61231c565b6040519080825280602002602001820160405280156117f557816020015b6117e2611f1c565b8152602001906001900390816117da5790505b50905060005b835151811015611851578351805182908110611819576118196129b6565b6020026020010151828281518110611833576118336129b6565b60200260200101819052508080611849906129cc565b9150506117fb565b5081818460000151518151811061186a5761186a6129b6565b602090810291909101015290915250565b81515160009061188c906001612a49565b6001600160401b038111156118a3576118a361231c565b6040519080825280602002602001820160405280156118cc578160200160208202803683370190505b50905060005b8351518110156119315783518051829081106118f0576118f06129b6565b602002602001015182828151811061190a5761190a6129b6565b63ffffffff9092166020928302919091019091015280611929816129cc565b9150506118d2565b5081818460000151518151811061194a5761194a6129b6565b63ffffffff9092166020928302919091019091015290915250565b805180516000919061197990600190612a07565b81518110611989576119896129b6565b60200260200101519050600060018360000151516119a79190612a07565b6001600160401b038111156119be576119be61231c565b6040519080825280602002602001820160405280156119e7578160200160208202803683370190505b50905060005b815181101561116c578351805182908110611a0a57611a0a6129b6565b6020026020010151828281518110611a2457611a246129b6565b63ffffffff9092166020928302919091019091015280611a43816129cc565b9150506119ed565b604080518082019091526000808252602082015281518051611a6f90600190612a07565b81518110611a7f57611a7f6129b6565b6020026020010151905060006001836000015151611a9d9190612a07565b6001600160401b03811115611ab457611ab461231c565b604051908082528060200260200182016040528015611af957816020015b6040805180820190915260008082526020820152815260200190600190039081611ad25790505b50905060005b815181101561116c578351805182908110611b1c57611b1c6129b6565b6020026020010151828281518110611b3657611b366129b6565b60200260200101819052508080611b4c906129cc565b915050611aff565b815151600090611b65906001612a49565b6001600160401b03811115611b7c57611b7c61231c565b604051908082528060200260200182016040528015611bc157816020015b6040805180820190915260008082526020820152815260200190600190039081611b9a5790505b50905060005b835151811015611851578351805182908110611be557611be56129b6565b6020026020010151828281518110611bff57611bff6129b6565b60200260200101819052508080611c15906129cc565b915050611bc7565b600081815b60208110156112c057600883901b9250858583818110611c4457611c446129b6565b919091013560f81c93909317925081611c5c816129cc565b9250508080611c6a906129cc565b915050611c22565b8160005b855151811015611d3b5760018516611cd757828287600001518381518110611ca057611ca06129b6565b6020026020010151604051602001611cba93929190612a61565b604051602081830303815290604052805190602001209150611d22565b8286600001518281518110611cee57611cee6129b6565b602002602001015183604051602001611d0993929190612a61565b6040516020818303038152906040528051906020012091505b60019490941c9380611d33816129cc565b915050611c76565b50949350505050565b600081600001518260200151604051602001611d61929190612aa7565b604051602081830303815290604052805190602001209050919050565b60408051808201909152600080825260208201528251805183908110611da657611da66129b6565b6020026020010151905092915050565b6000611df68484611dc685611d44565b604051806040016040528060128152602001712b30b63ab29036b2b935b632903a3932b29d60711b815250611c72565b949350505050565b6040805161014081019091528060008152602001611e3360408051606080820183529181019182529081526000602082015290565b8152602001611e5960408051606080820183529181019182529081526000602082015290565b8152602001611e7f60408051606080820183529181019182529081526000602082015290565b8152602001611ea4604051806040016040528060608152602001600080191681525090565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b6040805160a081018252600080825282518084019093528083526020838101919091529091908201905b81526000602082018190526040820181905260609091015290565b611f1a612adc565b565b6040805160c0810190915260006080820181815260a08301919091528190611ef7565b60008083601f840112611f5157600080fd5b5081356001600160401b03811115611f6857600080fd5b602083019150836020828501011115611f8057600080fd5b9250929050565b6000806000806000808688036101a0811215611fa257600080fd5b6060811215611fb057600080fd5b87965060608801356001600160401b0380821115611fcd57600080fd5b818a01915061014080838d031215611fe457600080fd5b82985060c0607f1985011215611ff957600080fd5b60808b019750604061013f198501121561201257600080fd5b8a0195506101808a013592508083111561202b57600080fd5b505061203989828a01611f3f565b979a9699509497509295939492505050565b634e487b7160e01b600052602160045260246000fd5b600481106120715761207161204b565b9052565b8051600881106120875761208761204b565b8252602090810151910152565b805160408084529051602084830181905281516060860181905260009392820191849160808801905b808410156120e4576120d0828651612075565b9382019360019390930192908501906120bd565b509581015196019590955250919392505050565b805160408084529051602091840182905280516060850181905260009291820191839160808701905b8084101561214757845163ffffffff168252938201936001939093019290820190612121565b5094810151950194909452509092915050565b8051604080845281518482018190526000926060916020918201918388019190865b828110156121c5578451612191858251612075565b80830151858901528781015163ffffffff90811688870152908701511660808501529381019360a09093019260010161217c565b509687015197909601969096525093949350505050565b60e081526121ee60e082018451612061565b60006020840151610140610100818186015261220e610220860184612094565b9250604087015160df1961012081888703018189015261222e8684612094565b955060608a0151925081888703018589015261224a86846120f8565b955060808a015194508188870301610160890152612268868661215a565b955060a08a015161018089015260c08a0151945061228f6101a089018663ffffffff169052565b60e08a015163ffffffff81166101c08a015294508984015163ffffffff81166101e08a015294508901516102008801525092935061165b925050602084019050848051825260208101516001600160401b0381511660208401526020810151604084015250604081015160608301526060810151608083015263ffffffff60808201511660a08301525050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156123545761235461231c565b60405290565b604051602081016001600160401b03811182821017156123545761235461231c565b604051608081016001600160401b03811182821017156123545761235461231c565b60405161014081016001600160401b03811182821017156123545761235461231c565b60405160a081016001600160401b03811182821017156123545761235461231c565b604051601f8201601f191681016001600160401b038111828210171561240b5761240b61231c565b604052919050565b80356004811061242257600080fd5b919050565b60006001600160401b038211156124405761244061231c565b5060051b60200190565b60006040828403121561245c57600080fd5b612464612332565b905081356008811061247557600080fd5b808252506020820135602082015292915050565b6000604080838503121561249c57600080fd5b6124a4612332565b915082356001600160401b03808211156124bd57600080fd5b818501915060208083880312156124d357600080fd5b6124db61235a565b8335838111156124ea57600080fd5b80850194505087601f8501126124ff57600080fd5b8335925061251461250f84612427565b6123e3565b83815260069390931b8401820192828101908985111561253357600080fd5b948301945b848610156125595761254a8a8761244a565b82529486019490830190612538565b8252508552948501359484019490945250909392505050565b803563ffffffff8116811461242257600080fd5b60006040828403121561259857600080fd5b6125a0612332565b905081356001600160401b03808211156125b957600080fd5b818401915060208083870312156125cf57600080fd5b6125d761235a565b8335838111156125e657600080fd5b80850194505086601f8501126125fb57600080fd5b8335925061260b61250f84612427565b83815260059390931b8401820192828101908885111561262a57600080fd5b948301945b8486101561264f5761264086612572565b8252948301949083019061262f565b825250845293840135938301939093525092915050565b6000604080838503121561267957600080fd5b612681612332565b915082356001600160401b0381111561269957600080fd5b8301601f810185136126aa57600080fd5b803560206126ba61250f83612427565b82815260a092830284018201928282019190898511156126d957600080fd5b948301945b848610156127425780868b0312156126f65760008081fd5b6126fe61237c565b6127088b8861244a565b81528787013585820152606061271f818901612572565b8983015261272f60808901612572565b90820152835294850194918301916126de565b50808752505080860135818601525050505092915050565b6000610140823603121561276d57600080fd5b61277561239e565b61277e83612413565b815260208301356001600160401b038082111561279a57600080fd5b6127a636838701612489565b602084015260408501359150808211156127bf57600080fd5b6127cb36838701612489565b604084015260608501359150808211156127e457600080fd5b6127f036838701612586565b6060840152608085013591508082111561280957600080fd5b5061281636828601612666565b60808301525060a083013560a082015261283260c08401612572565b60c082015261284360e08401612572565b60e0820152610100612856818501612572565b9082015261012092830135928101929092525090565b600081830360c081121561287f57600080fd5b6128876123c1565b833581526040601f198301121561289d57600080fd5b6128a5612332565b915060208401356001600160401b03811681146128c157600080fd5b808352506040840135602083015281602082015260608401356040820152608084013560608201526128f560a08501612572565b6080820152949350505050565b60006020828403121561291457600080fd5b813561ffff8116811461165b57600080fd5b6020808252600d908201526c4241445f43414c4c5f4441544160981b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600063ffffffff8083168185168083038211156129825761298261294d565b01949350505050565b6020808252601190820152700848288beae929c889eaebe988a9c8ea89607b1b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006000198214156129e0576129e061294d565b5060010190565b600060ff821660ff8114156129fe576129fe61294d565b60010192915050565b600082821015612a1957612a1961294d565b500390565b60208082526011908201527015d493d391d7d3515492d31157d493d3d5607a1b604082015260600190565b60008219821115612a5c57612a5c61294d565b500190565b6000845160005b81811015612a825760208188018101518583015201612a68565b81811115612a91576000828501525b5091909101928352506020820152604001919050565b652b30b63ab29d60d11b8152600060088410612ac557612ac561204b565b5060f89290921b6006830152600782015260270190565b634e487b7160e01b600052605160045260246000fdfea2646970667358221220f5b15cf377f5fccb750aaf23e3c0243cfdf30aa4312b2e98200568dcb693df9564736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class OneStepProver0__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "OneStepProver0";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OneStepProver0__factory = OneStepProver0__factory;
OneStepProver0__factory.bytecode = _bytecode;
OneStepProver0__factory.abi = _abi;
