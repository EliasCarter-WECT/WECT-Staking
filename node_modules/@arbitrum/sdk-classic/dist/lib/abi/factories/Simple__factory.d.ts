import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Simple, SimpleInterface } from "../Simple";
declare type SimpleConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Simple__factory extends ContractFactory {
    constructor(...args: SimpleConstructorParams);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<Simple>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): Simple;
    connect(signer: Signer): Simple__factory;
    static readonly contractName: "Simple";
    readonly contractName: "Simple";
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061011a806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806361bc221a146037578063d09de08a146067575b600080fd5b600054604a9067ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200160405180910390f35b606d606f565b005b6000805467ffffffffffffffff16908060868360af565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b600067ffffffffffffffff8083168181141560da57634e487b7160e01b600052601160045260246000fd5b600101939250505056fea2646970667358221220e27eb36feeb211e560e363577f33bac94a128337795ce10c16db32f06c5ff90f64736f6c63430008090033";
    static readonly abi: {
        inputs: never[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    }[];
    static createInterface(): SimpleInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Simple;
}
export {};
