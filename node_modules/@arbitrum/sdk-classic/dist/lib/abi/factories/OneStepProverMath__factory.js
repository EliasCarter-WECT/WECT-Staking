"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OneStepProverMath__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "maxInboxMessagesRead",
                        type: "uint256",
                    },
                    {
                        internalType: "contract ISequencerInbox",
                        name: "sequencerInbox",
                        type: "address",
                    },
                    {
                        internalType: "contract IBridge",
                        name: "delayedBridge",
                        type: "address",
                    },
                ],
                internalType: "struct ExecutionContext",
                name: "",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "enum MachineStatus",
                        name: "status",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "valueStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "internalStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint32[]",
                                        name: "inner",
                                        type: "uint32[]",
                                    },
                                ],
                                internalType: "struct PcArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct PcStack",
                        name: "blockStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value",
                                        name: "returnPc",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "localsMerkleRoot",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModule",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModuleInternals",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct StackFrame[]",
                                name: "proved",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct StackFrameWindow",
                        name: "frameStack",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "globalStateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "moduleIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionPc",
                        type: "uint32",
                    },
                    {
                        internalType: "bytes32",
                        name: "modulesRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Machine",
                name: "startMach",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "globalsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "size",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ModuleMemory",
                        name: "moduleMemory",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "tablesMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "functionsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "internalsOffset",
                        type: "uint32",
                    },
                ],
                internalType: "struct Module",
                name: "startMod",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "uint16",
                        name: "opcode",
                        type: "uint16",
                    },
                    {
                        internalType: "uint256",
                        name: "argumentData",
                        type: "uint256",
                    },
                ],
                internalType: "struct Instruction",
                name: "inst",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "proof",
                type: "bytes",
            },
        ],
        name: "executeOneStep",
        outputs: [
            {
                components: [
                    {
                        internalType: "enum MachineStatus",
                        name: "status",
                        type: "uint8",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "valueStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value[]",
                                        name: "inner",
                                        type: "tuple[]",
                                    },
                                ],
                                internalType: "struct ValueArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ValueStack",
                        name: "internalStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "uint32[]",
                                        name: "inner",
                                        type: "uint32[]",
                                    },
                                ],
                                internalType: "struct PcArray",
                                name: "proved",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct PcStack",
                        name: "blockStack",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        components: [
                                            {
                                                internalType: "enum ValueType",
                                                name: "valueType",
                                                type: "uint8",
                                            },
                                            {
                                                internalType: "uint256",
                                                name: "contents",
                                                type: "uint256",
                                            },
                                        ],
                                        internalType: "struct Value",
                                        name: "returnPc",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "localsMerkleRoot",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModule",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "callerModuleInternals",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct StackFrame[]",
                                name: "proved",
                                type: "tuple[]",
                            },
                            {
                                internalType: "bytes32",
                                name: "remainingHash",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct StackFrameWindow",
                        name: "frameStack",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "globalStateHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "moduleIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionIdx",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "functionPc",
                        type: "uint32",
                    },
                    {
                        internalType: "bytes32",
                        name: "modulesRoot",
                        type: "bytes32",
                    },
                ],
                internalType: "struct Machine",
                name: "mach",
                type: "tuple",
            },
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "globalsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint64",
                                name: "size",
                                type: "uint64",
                            },
                            {
                                internalType: "bytes32",
                                name: "merkleRoot",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ModuleMemory",
                        name: "moduleMemory",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "tablesMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "functionsMerkleRoot",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint32",
                        name: "internalsOffset",
                        type: "uint32",
                    },
                ],
                internalType: "struct Module",
                name: "mod",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50612419806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063787569bc14610030575b600080fd5b61004361003e36600461183c565b61005a565b604051610051929190611a91565b60405180910390f35b61006261171b565b6040805160a08101825260008082528251808401845281815260208082018390528301529181018290526060810182905260808101919091526100a48761200a565b91506100b53687900387018761211c565b905060006100c660208701876121b2565b90506117ea61ffff8216604514806100e2575061ffff82166050145b156100f057506102ff6102e1565b604661ffff831610801590610118575061010c600960466121ec565b61ffff168261ffff1611155b1561012657506104186102e1565b606761ffff83161080159061014e5750610142600260676121ec565b61ffff168261ffff1611155b1561015c57506104fb6102e1565b606a61ffff8316108015906101765750607861ffff831611155b1561018457506105636102e1565b605161ffff8316108015906101ac57506101a0600960516121ec565b61ffff168261ffff1611155b156101ba57506106f76102e1565b607961ffff8316108015906101e257506101d6600260796121ec565b61ffff168261ffff1611155b156101f0575061075c6102e1565b607c61ffff83161080159061020a5750608a61ffff831611155b1561021857506107af6102e1565b61ffff821660a7141561022e57506109306102e1565b61ffff821660ac1480610245575061ffff821660ad145b1561025357506109516102e1565b60c061ffff83161080159061026d575060c461ffff831611155b1561027b57506109a56102e1565b60bc61ffff831610801590610295575060bf61ffff831611155b156102a35750610bba6102e1565b60405162461bcd60e51b815260206004820152600e60248201526d494e56414c49445f4f50434f444560901b60448201526064015b60405180910390fd5b6102f284848989898663ffffffff16565b5050965096945050505050565b600061030e8660200151610d45565b9050604561031f60208601866121b2565b61ffff1614156103605760008151600781111561033e5761033e611900565b1461035b5760405162461bcd60e51b81526004016102d890612212565b6103dd565b605061036f60208601866121b2565b61ffff1614156103ab5760018151600781111561038e5761038e611900565b1461035b5760405162461bcd60e51b81526004016102d890612233565b60405162461bcd60e51b81526020600482015260076024820152662120a22fa2a8ad60c91b60448201526064016102d8565b60008160200151600014156103f4575060016103f8565b5060005b61040f61040482610d6a565b602089015190610d9d565b50505050505050565b600061042f61042a8760200151610d45565b610dad565b9050600061044361042a8860200151610d45565b90506000604661045660208801886121b2565b6104609190612254565b905060008061ffff83166002148061047c575061ffff83166004145b8061048b575061ffff83166006145b8061049a575061ffff83166008145b156104ba576104a884610e24565b91506104b385610e24565b90506104c8565b505063ffffffff8083169084165b60006104d5838386610e50565b90506104ee6104e382610ff9565b60208d015190610d9d565b5050505050505050505050565b600061050d61042a8760200151610d45565b90506000606761052060208701876121b2565b61052a9190612254565b905060006105408363ffffffff1683602061102c565b905061055961054e82610d6a565b60208a015190610d9d565b5050505050505050565b600061057561042a8760200151610d45565b9050600061058961042a8860200151610d45565b9050600080606a61059d60208901896121b2565b6105a79190612254565b90508061ffff16600314156105e75763ffffffff84166105ca57600091506106d5565b8360030b8360030b816105df576105df612277565b0591506106d5565b8061ffff16600514156106255763ffffffff841661060857600091506106d5565b8360030b8360030b8161061d5761061d612277565b0791506106d5565b8061ffff16600a14156106455763ffffffff8316601f85161b91506106d5565b8061ffff16600c14156106655763ffffffff8316601f85161c91506106d5565b8061ffff16600b1415610686578363ffffffff168360030b901d91506106d5565b8061ffff16600d14156106a45761069d83856111f0565b91506106d5565b8061ffff16600e14156106bb5761069d8385611232565b6106d28363ffffffff168563ffffffff1683611274565b91505b6106ec6106e183610d6a565b60208b015190610d9d565b505050505050505050565b600061070e6107098760200151610d45565b6113cf565b905060006107226107098860200151610d45565b90506000605161073560208801886121b2565b61073f9190612254565b9050600061074e838584610e50565b90506106ec6106e182610ff9565b600061076e6107098760200151610d45565b90506000607961078160208701876121b2565b61078b9190612254565b9050600061079b8383604061102c565b63ffffffff16905061055961054e82611446565b60006107c16107098760200151610d45565b905060006107d56107098860200151610d45565b9050600080607c6107e960208901896121b2565b6107f39190612254565b90508061ffff1660031415610836576001600160401b0384166108195760009150610924565b8360070b8360070b8161082e5761082e612277565b059150610924565b8061ffff1660051415610877576001600160401b03841661085a5760009150610924565b8360070b8360070b8161086f5761086f612277565b079150610924565b8061ffff16600a141561089a576001600160401b038316603f85161b9150610924565b8061ffff16600c14156108bd576001600160401b038316603f85161c9150610924565b8061ffff16600b14156108e157836001600160401b03168360070b901d9150610924565b8061ffff16600d14156108ff576108f8838561147c565b9150610924565b8061ffff16600e1415610916576108f883856114ca565b610921838583611274565b91505b6106ec6106e183611446565b60006109426107098760200151610d45565b90508061040f61040482610d6a565b600061096361042a8760200151610d45565b9050600060ac61097660208701876121b2565b61ffff1614156109905761098982610e24565b9050610999565b5063ffffffff81165b61040f61040482611446565b60008060c06109b760208701876121b2565b61ffff1614156109cd5750600090506008610aa4565b60c16109dc60208701876121b2565b61ffff1614156109f25750600090506010610aa4565b60c2610a0160208701876121b2565b61ffff161415610a175750600190506008610aa4565b60c3610a2660208701876121b2565b61ffff161415610a3c5750600190506010610aa4565b60c4610a4b60208701876121b2565b61ffff161415610a615750600190506020610aa4565b60405162461bcd60e51b8152602060048201526018602482015277494e56414c49445f455854454e445f53414d455f5459504560401b60448201526064016102d8565b600080836007811115610ab957610ab9611900565b1415610aca575063ffffffff610ad4565b506001600160401b035b6000610ae38960200151610d45565b9050836007811115610af757610af7611900565b81516007811115610b0a57610b0a611900565b14610b535760405162461bcd60e51b81526020600482015260196024820152784241445f455854454e445f53414d455f545950455f5459504560381b60448201526064016102d8565b6000610b66600160ff861681901b61228d565b602083018051821690529050610b7d6001856122a4565b60ff166001901b826020015116600014610b9f57602082018051821985161790525b60208a0151610bae9083610d9d565b50505050505050505050565b60008060bc610bcc60208701876121b2565b61ffff161415610be25750600090506002610c8f565b60bd610bf160208701876121b2565b61ffff161415610c075750600190506003610c8f565b60be610c1660208701876121b2565b61ffff161415610c2c5750600290506000610c8f565b60bf610c3b60208701876121b2565b61ffff161415610c515750600390506001610c8f565b60405162461bcd60e51b81526020600482015260136024820152721253959053125117d491525395115494149155606a1b60448201526064016102d8565b6000610c9e8860200151610d45565b9050816007811115610cb257610cb2611900565b81516007811115610cc557610cc5611900565b14610d0d5760405162461bcd60e51b8152602060048201526018602482015277494e56414c49445f5245494e544552505245545f5459504560401b60448201526064016102d8565b80836007811115610d2057610d20611900565b90816007811115610d3357610d33611900565b90525060208801516105599082610d9d565b60408051808201909152600080825260208201528151610d6490611518565b92915050565b604080518082019091526000808252602082015250604080518082019091526000815263ffffffff909116602082015290565b8151610da99082611628565b5050565b60208101516000908183516007811115610dc957610dc9611900565b14610de65760405162461bcd60e51b81526004016102d890612212565b6401000000008110610d645760405162461bcd60e51b81526020600482015260076024820152662120a22fa4999960c91b60448201526064016102d8565b60006380000000821615610e46575063ffffffff1667ffffffff000000001790565b5063ffffffff1690565b600061ffff8216610e7757826001600160401b0316846001600160401b0316149050610ff2565b61ffff821660011415610ea157826001600160401b0316846001600160401b031614159050610ff2565b61ffff821660021415610ebe578260070b8460070b129050610ff2565b61ffff821660031415610ee757826001600160401b0316846001600160401b0316109050610ff2565b61ffff821660041415610f04578260070b8460070b139050610ff2565b61ffff821660051415610f2d57826001600160401b0316846001600160401b0316119050610ff2565b61ffff821660061415610f4b578260070b8460070b13159050610ff2565b61ffff821660071415610f7557826001600160401b0316846001600160401b031611159050610ff2565b61ffff821660081415610f93578260070b8460070b12159050610ff2565b61ffff821660091415610fbd57826001600160401b0316846001600160401b031610159050610ff2565b60405162461bcd60e51b815260206004820152600a6024820152690424144204952454c4f560b41b60448201526064016102d8565b9392505050565b6040805180820190915260008082526020820152811561101d57610d646001610d6a565b610d646000610d6a565b919050565b60008161ffff166020148061104557508161ffff166040145b61108c5760405162461bcd60e51b8152602060048201526018602482015277057524f4e4720555345204f462067656e65726963556e4f760441b60448201526064016102d8565b61ffff83166110fd5761ffff82165b60008163ffffffff161180156110d057506110b76001826122c7565b63ffffffff166001901b856001600160401b0316166000145b156110e7576110e06001826122c7565b905061109b565b6110f58161ffff85166122c7565b915050610ff2565b61ffff8316600114156111565760005b8261ffff168163ffffffff161080156111385750600163ffffffff82161b85166001600160401b0316155b1561114f576111486001826122e4565b905061110d565b9050610ff2565b61ffff8316600214156111bc576000805b8361ffff168263ffffffff1610156111b357600163ffffffff83161b86166001600160401b0316156111a15761119e6001826122e4565b90505b816111ab81612303565b925050611167565b9150610ff29050565b60405162461bcd60e51b815260206004820152600960248201526804241442049556e4f760bc1b60448201526064016102d8565b60006111fd602083612327565b915061120a8260206122c7565b63ffffffff168363ffffffff16901c8263ffffffff168463ffffffff16901b17905092915050565b600061123f602083612327565b915061124c8260206122c7565b63ffffffff168363ffffffff16901b8263ffffffff168463ffffffff16901c17905092915050565b600061ffff82166112885750828201610ff2565b8161ffff166001141561129e5750818303610ff2565b8161ffff16600214156112b45750828202610ff2565b8161ffff1660041415611300576001600160401b0383166112d757506000610ff2565b826001600160401b0316846001600160401b0316816112f8576112f8612277565b049050610ff2565b8161ffff166006141561134c576001600160401b03831661132357506000610ff2565b826001600160401b0316846001600160401b03168161134457611344612277565b069050610ff2565b8161ffff16600714156113625750828216610ff2565b8161ffff16600814156113785750828217610ff2565b8161ffff166009141561138e5750828218610ff2565b60405162461bcd60e51b81526020600482015260166024820152750494e56414c49445f47454e455249435f42494e5f4f560541b60448201526064016102d8565b60208101516000906001835160078111156113ec576113ec611900565b146114095760405162461bcd60e51b81526004016102d890612233565b600160401b8110610d645760405162461bcd60e51b815260206004820152600760248201526610905117d24d8d60ca1b60448201526064016102d8565b60408051808201909152600080825260208201525060408051808201909152600181526001600160401b03909116602082015290565b600061148960408361234a565b9150611496826040612364565b6001600160401b0316836001600160401b0316901c826001600160401b0316846001600160401b0316901b17905092915050565b60006114d760408361234a565b91506114e4826040612364565b6001600160401b0316836001600160401b0316901b826001600160401b0316846001600160401b0316901c17905092915050565b60408051808201909152600080825260208201528151805161153c9060019061228d565b8151811061154c5761154c612384565b602002602001015190506000600183600001515161156a919061228d565b6001600160401b0381111561158157611581611bd1565b6040519080825280602002602001820160405280156115c657816020015b604080518082019091526000808252602082015281526020019060019003908161159f5790505b50905060005b81518110156116215783518051829081106115e9576115e9612384565b602002602001015182828151811061160357611603612384565b602002602001018190525080806116199061239a565b9150506115cc565b5090915290565b8151516000906116399060016123b5565b6001600160401b0381111561165057611650611bd1565b60405190808252806020026020018201604052801561169557816020015b604080518082019091526000808252602082015281526020019060019003908161166e5790505b50905060005b8351518110156116f15783518051829081106116b9576116b9612384565b60200260200101518282815181106116d3576116d3612384565b602002602001018190525080806116e99061239a565b91505061169b565b5081818460000151518151811061170a5761170a612384565b602090810291909101015290915250565b604080516101408101909152806000815260200161175060408051606080820183529181019182529081526000602082015290565b815260200161177660408051606080820183529181019182529081526000602082015290565b815260200161179c60408051606080820183529181019182529081526000602082015290565b81526020016117c1604051806040016040528060608152602001600080191681525090565b815260006020820181905260408201819052606082018190526080820181905260a09091015290565b6117f26123cd565b565b60008083601f84011261180657600080fd5b5081356001600160401b0381111561181d57600080fd5b60208301915083602082850101111561183557600080fd5b9250929050565b6000806000806000808688036101a081121561185757600080fd5b606081121561186557600080fd5b87965060608801356001600160401b038082111561188257600080fd5b818a01915061014080838d03121561189957600080fd5b82985060c0607f19850112156118ae57600080fd5b60808b019750604061013f19850112156118c757600080fd5b8a0195506101808a01359250808311156118e057600080fd5b50506118ee89828a016117f4565b979a9699509497509295939492505050565b634e487b7160e01b600052602160045260246000fd5b6004811061192657611926611900565b9052565b80516008811061193c5761193c611900565b8252602090810151910152565b805160408084529051602084830181905281516060860181905260009392820191849160808801905b808410156119995761198582865161192a565b938201936001939093019290850190611972565b509581015196019590955250919392505050565b805160408084529051602091840182905280516060850181905260009291820191839160808701905b808410156119fc57845163ffffffff1682529382019360019390930192908201906119d6565b5094810151950194909452509092915050565b8051604080845281518482018190526000926060916020918201918388019190865b82811015611a7a578451611a4685825161192a565b80830151858901528781015163ffffffff90811688870152908701511660808501529381019360a090930192600101611a31565b509687015197909601969096525093949350505050565b60e08152611aa360e082018451611916565b600060208401516101406101008181860152611ac3610220860184611949565b9250604087015160df19610120818887030181890152611ae38684611949565b955060608a01519250818887030185890152611aff86846119ad565b955060808a015194508188870301610160890152611b1d8686611a0f565b955060a08a015161018089015260c08a01519450611b446101a089018663ffffffff169052565b60e08a015163ffffffff81166101c08a015294508984015163ffffffff81166101e08a0152945089015161020088015250929350610ff2925050602084019050848051825260208101516001600160401b0381511660208401526020810151604084015250604081015160608301526060810151608083015263ffffffff60808201511660a08301525050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611c0957611c09611bd1565b60405290565b604051602081016001600160401b0381118282101715611c0957611c09611bd1565b604051608081016001600160401b0381118282101715611c0957611c09611bd1565b60405161014081016001600160401b0381118282101715611c0957611c09611bd1565b60405160a081016001600160401b0381118282101715611c0957611c09611bd1565b604051601f8201601f191681016001600160401b0381118282101715611cc057611cc0611bd1565b604052919050565b80356004811061102757600080fd5b60006001600160401b03821115611cf057611cf0611bd1565b5060051b60200190565b600060408284031215611d0c57600080fd5b611d14611be7565b9050813560088110611d2557600080fd5b808252506020820135602082015292915050565b60006040808385031215611d4c57600080fd5b611d54611be7565b915082356001600160401b0380821115611d6d57600080fd5b81850191506020808388031215611d8357600080fd5b611d8b611c0f565b833583811115611d9a57600080fd5b80850194505087601f850112611daf57600080fd5b83359250611dc4611dbf84611cd7565b611c98565b83815260069390931b84018201928281019089851115611de357600080fd5b948301945b84861015611e0957611dfa8a87611cfa565b82529486019490830190611de8565b8252508552948501359484019490945250909392505050565b803563ffffffff8116811461102757600080fd5b600060408284031215611e4857600080fd5b611e50611be7565b905081356001600160401b0380821115611e6957600080fd5b81840191506020808387031215611e7f57600080fd5b611e87611c0f565b833583811115611e9657600080fd5b80850194505086601f850112611eab57600080fd5b83359250611ebb611dbf84611cd7565b83815260059390931b84018201928281019088851115611eda57600080fd5b948301945b84861015611eff57611ef086611e22565b82529483019490830190611edf565b825250845293840135938301939093525092915050565b60006040808385031215611f2957600080fd5b611f31611be7565b915082356001600160401b03811115611f4957600080fd5b8301601f81018513611f5a57600080fd5b80356020611f6a611dbf83611cd7565b82815260a09283028401820192828201919089851115611f8957600080fd5b948301945b84861015611ff25780868b031215611fa65760008081fd5b611fae611c31565b611fb88b88611cfa565b815287870135858201526060611fcf818901611e22565b89830152611fdf60808901611e22565b9082015283529485019491830191611f8e565b50808752505080860135818601525050505092915050565b6000610140823603121561201d57600080fd5b612025611c53565b61202e83611cc8565b815260208301356001600160401b038082111561204a57600080fd5b61205636838701611d39565b6020840152604085013591508082111561206f57600080fd5b61207b36838701611d39565b6040840152606085013591508082111561209457600080fd5b6120a036838701611e36565b606084015260808501359150808211156120b957600080fd5b506120c636828601611f16565b60808301525060a083013560a08201526120e260c08401611e22565b60c08201526120f360e08401611e22565b60e0820152610100612106818501611e22565b9082015261012092830135928101929092525090565b600081830360c081121561212f57600080fd5b612137611c76565b833581526040601f198301121561214d57600080fd5b612155611be7565b915060208401356001600160401b038116811461217157600080fd5b808352506040840135602083015281602082015260608401356040820152608084013560608201526121a560a08501611e22565b6080820152949350505050565b6000602082840312156121c457600080fd5b813561ffff81168114610ff257600080fd5b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115612209576122096121d6565b01949350505050565b6020808252600790820152662727aa2fa4999960c91b604082015260600190565b6020808252600790820152661393d517d24d8d60ca1b604082015260600190565b600061ffff8381169083168181101561226f5761226f6121d6565b039392505050565b634e487b7160e01b600052601260045260246000fd5b60008282101561229f5761229f6121d6565b500390565b600060ff821660ff8416808210156122be576122be6121d6565b90039392505050565b600063ffffffff8381169083168181101561226f5761226f6121d6565b600063ffffffff808316818516808303821115612209576122096121d6565b600063ffffffff8083168181141561231d5761231d6121d6565b6001019392505050565b600063ffffffff8084168061233e5761233e612277565b92169190910692915050565b60006001600160401b038084168061233e5761233e612277565b60006001600160401b038381169083168181101561226f5761226f6121d6565b634e487b7160e01b600052603260045260246000fd5b60006000198214156123ae576123ae6121d6565b5060010190565b600082198211156123c8576123c86121d6565b500190565b634e487b7160e01b600052605160045260246000fdfea26469706673582212203acc027e519a652c569f6ce2bf61e1b683dd127664eb965e16794f757625177864736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class OneStepProverMath__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "OneStepProverMath";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.OneStepProverMath__factory = OneStepProverMath__factory;
OneStepProverMath__factory.bytecode = _bytecode;
OneStepProverMath__factory.abi = _abi;
