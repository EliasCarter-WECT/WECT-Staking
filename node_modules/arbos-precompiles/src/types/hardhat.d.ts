/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ArbAddressTable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbAddressTable__factory>;
    getContractFactory(
      name: "ArbAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbAggregator__factory>;
    getContractFactory(
      name: "ArbBLS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbBLS__factory>;
    getContractFactory(
      name: "ArbFunctionTable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbFunctionTable__factory>;
    getContractFactory(
      name: "ArbGasInfo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbGasInfo__factory>;
    getContractFactory(
      name: "ArbInfo",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbInfo__factory>;
    getContractFactory(
      name: "ArbosTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbosTest__factory>;
    getContractFactory(
      name: "ArbOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbOwner__factory>;
    getContractFactory(
      name: "ArbRetryableTx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbRetryableTx__factory>;
    getContractFactory(
      name: "ArbStatistics",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbStatistics__factory>;
    getContractFactory(
      name: "ArbSys",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbSys__factory>;
    getContractFactory(
      name: "Add",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Add__factory>;
    getContractFactory(
      name: "BlockNum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlockNum__factory>;
    getContractFactory(
      name: "Callback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Callback__factory>;
    getContractFactory(
      name: "ExtCodeSizeTest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExtCodeSizeTest__factory>;
    getContractFactory(
      name: "Fibonacci",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Fibonacci__factory>;
    getContractFactory(
      name: "MemoryUsage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MemoryUsage__factory>;
    getContractFactory(
      name: "Migrations",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Migrations__factory>;
    getContractFactory(
      name: "PaymentChannel",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PaymentChannel__factory>;
    getContractFactory(
      name: "ConstructorCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConstructorCallback__factory>;
    getContractFactory(
      name: "ConstructorCallback2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConstructorCallback2__factory>;
    getContractFactory(
      name: "Reverter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reverter__factory>;
    getContractFactory(
      name: "ReverterFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReverterFactory__factory>;
    getContractFactory(
      name: "Underfunded",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Underfunded__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
